{
    "__inputs": [
        {
            "name": "DS_GRAPHITE",
            "label": "Graphite",
            "description": "",
            "type": "datasource",
            "pluginId": "graphite",
            "pluginName": "Graphite"
        }
    ],
    "__elements": {},
    "__requires": [
        {
            "type": "panel",
            "id": "gauge",
            "name": "Gauge",
            "version": ""
        },
        {
            "type": "grafana",
            "id": "grafana",
            "name": "Grafana",
            "version": "10.0.2"
        },
        {
            "type": "panel",
            "id": "graph",
            "name": "Graph (old)",
            "version": ""
        },
        {
            "type": "datasource",
            "id": "graphite",
            "name": "Graphite",
            "version": "1.0.0"
        },
        {
            "type": "panel",
            "id": "stat",
            "name": "Stat",
            "version": ""
        },
        {
            "type": "panel",
            "id": "timeseries",
            "name": "Time series",
            "version": ""
        }
    ],
    "annotations": {
        "list": [
            {
                "builtIn": 1,
                "datasource": {
                    "type": "datasource",
                    "uid": "grafana"
                },
                "enable": true,
                "hide": true,
                "iconColor": "rgba(0, 211, 255, 1)",
                "name": "Annotations & Alerts",
                "target": {
                    "limit": 100,
                    "matchAny": false,
                    "tags": [],
                    "type": "dashboard"
                },
                "type": "dashboard"
            }
        ]
    },
    "description": "Linux performance Metrics",
    "editable": true,
    "fiscalYearStartMonth": 0,
    "gnetId": 928,
    "graphTooltip": 1,
    "id": null,
    "links": [
        {
            "asDropdown": false,
            "icon": "doc",
            "includeVars": true,
            "keepTime": true,
            "tags": [],
            "targetBlank": true,
            "title": "PDF",
            "tooltip": "",
            "type": "link",
            "url": "/render/d/zW7sWHzZz/linux-host-overview?width=1920&height=-1&theme=light&kiosk&asPDF=true&formatPDF=letter&scalePDF=-1",
            "description": "# Linux Performance Data\n\n## Overview\nLinux is an open-source operating system that is widely used in many computing environments. It is a powerful and efficient operating system that allows users to customize their systems to meet their needs. The Linux Performance Data (LPD) is a comprehensive set of data that provides information about the performance of the Linux operating system.\n\n## Types of Data\nThe LPD includes various types of data, such as system performance metrics, system resource utilization, and system configuration information. It also includes data on system processes, memory usage, disk usage, network traffic, and other system-level performance information.\n\n## Benefits\nUsing the LPD can provide valuable insights into the performance of the Linux operating system. It can help identify potential problems and areas for improvement. It can also help identify the root causes of performance issues and help with system tuning and optimization.\n\n## Accessing Data\nThe LPD can be accessed through various tools, such as the Linux Performance Monitor (LPM), the Linux Performance Toolkit (LPT), and the Linux Performance Analyzer (LPA). These tools provide an easy way to access and analyze the data.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
        }
    ],
    "liveNow": false,
    "panels": [
        {
            "collapsed": false,
            "datasource": {
                "type": "graphite",
                "uid": "opvizorgraphite"
            },
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 0
            },
            "id": 61977,
            "panels": [],
            "targets": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "opvizorgraphite"
                    },
                    "refId": "A"
                }
            ],
            "title": "Quick overview",
            "type": "row",
            "description": "# Linux Performance Data\n\nLinux is an open source operating system that is used by millions of people around the world. It is highly customizable, reliable, and secure. Performance data can be used to measure the performance of a Linux system, and to diagnose and troubleshoot any problems that may arise.\n\n## System Performance\n\nSystem performance is the measure of how well a system is running. This includes the speed of the system, the amount of memory it uses, and the amount of disk space available. Performance data can be used to determine if a system is running optimally, or if it is being over-utilized.\n\n## Process Performance\n\nProcess performance is the measure of how efficiently a process is running. This includes the amount of CPU and memory usage, as well as the number of threads and processes running. Performance data can be used to identify any processes that are using too much resources, or that are running inefficiently.\n\n## Network Performance\n\nNetwork performance is the measure of how well the network is performing. This includes the speed of the connection, the amount of bandwidth available, and the latency of the connection. Performance data can be used to identify any issues with the network, such as slow speeds or packet loss.\n\n## Conclusion\n\nPerformance data is an invaluable tool for monitoring and troubleshooting a Linux system. It can be used to measure system, process, and network performance, as well as to identify any potential issues\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
        },
        {
            "datasource": {
                "type": "graphite",
                "uid": "${DS_GRAPHITE}"
            },
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "mappings": [],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "green",
                                "value": null
                            },
                            {
                                "color": "red",
                                "value": 80
                            }
                        ]
                    },
                    "unit": "dtdhms"
                },
                "overrides": []
            },
            "gridPos": {
                "h": 4,
                "w": 4,
                "x": 0,
                "y": 1
            },
            "id": 61858,
            "links": [],
            "maxDataPoints": 100,
            "options": {
                "colorMode": "value",
                "graphMode": "none",
                "justifyMode": "center",
                "orientation": "auto",
                "reduceOptions": {
                    "calcs": [
                        "last"
                    ],
                    "fields": "",
                    "values": false
                },
                "text": {},
                "textMode": "auto"
            },
            "pluginVersion": "10.0.2",
            "targets": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "dsType": "graphite",
                    "groupBy": [
                        {
                            "params": [
                                "$interval"
                            ],
                            "type": "time"
                        },
                        {
                            "params": [
                                "null"
                            ],
                            "type": "fill"
                        }
                    ],
                    "measurement": "system",
                    "policy": "default",
                    "refId": "A",
                    "resultFormat": "time_series",
                    "select": [
                        [
                            {
                                "params": [
                                    "uptime"
                                ],
                                "type": "field"
                            },
                            {
                                "params": [],
                                "type": "last"
                            }
                        ]
                    ],
                    "tags": [
                        {
                            "key": "host",
                            "operator": "=~",
                            "value": "/^$server$/"
                        }
                    ],
                    "target": "summarize(seriesByTag('name=opvagent.system.uptime', 'host=~${server}'), '1min', 'sum', false)",
                    "textEditor": true
                }
            ],
            "title": "Uptime",
            "type": "stat",
            "description": ":\n\n# Uptime\nUptime is a command that displays the amount of time a Linux system has been running. It is a useful tool for monitoring system performance and diagnosing system problems.\n\n## What Does Uptime Show?\nUptime shows the amount of time a system has been running since the last reboot. It also displays the number of users currently logged in, the system's load average (a measure of system activity), and the system's uptime in days, hours, and minutes.\n\n## How to Use Uptime\nUptime is a built-in command on most Linux systems. To use it, simply type \"uptime\" in the command line. The output will show the amount of time the system has been running, the number of users currently logged in, and the system's load average.\n\n## Benefits of Uptime\nUptime is a great tool for monitoring system performance and diagnosing system problems. It can help identify when a system is under heavy load or when there are too many users logged in. It can also help identify when a system needs to be rebooted or when it is not performing optimally. Uptime can also be used to track system uptime over time, allowing administrators to identify trends and take action when necessary.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
        },
        {
            "datasource": {
                "type": "graphite",
                "uid": "${DS_GRAPHITE}"
            },
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "mappings": [],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "green",
                                "value": null
                            },
                            {
                                "color": "red",
                                "value": 80
                            }
                        ]
                    }
                },
                "overrides": []
            },
            "gridPos": {
                "h": 4,
                "w": 2,
                "x": 4,
                "y": 1
            },
            "id": 61859,
            "links": [],
            "maxDataPoints": 100,
            "options": {
                "colorMode": "value",
                "graphMode": "area",
                "justifyMode": "auto",
                "orientation": "auto",
                "reduceOptions": {
                    "calcs": [
                        "lastNotNull"
                    ],
                    "fields": "",
                    "values": false
                },
                "textMode": "auto"
            },
            "pluginVersion": "10.0.2",
            "targets": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "dsType": "graphite",
                    "groupBy": [
                        {
                            "params": [
                                "$interval"
                            ],
                            "type": "time"
                        },
                        {
                            "params": [
                                "null"
                            ],
                            "type": "fill"
                        }
                    ],
                    "measurement": "system",
                    "policy": "default",
                    "refId": "A",
                    "resultFormat": "time_series",
                    "select": [
                        [
                            {
                                "params": [
                                    "load5"
                                ],
                                "type": "field"
                            },
                            {
                                "params": [],
                                "type": "last"
                            }
                        ]
                    ],
                    "tags": [
                        {
                            "key": "host",
                            "operator": "=~",
                            "value": "/^$server$/"
                        }
                    ],
                    "target": "groupByNode(seriesByTag('host=~${server:regex}', 'name=opvagent.system.load5'), 'name', 'last')",
                    "textEditor": true
                }
            ],
            "title": "LA medium",
            "type": "stat",
            "description": ".\n\n# Linux Performance Data\n\nLinux performance data is data collected from the Linux operating system, which is used to assess the performance of the system and its processes. This data can be gathered in various ways, including monitoring system resources, tracking system usage, and analyzing system logs.\n\n## Monitoring System Resources\n\nMonitoring system resources involves collecting data on the availability of hardware and software resources, such as CPU and memory usage. This data can be used to identify potential bottlenecks and areas of improvement.\n\n## Tracking System Usage\n\nTracking system usage involves collecting data on how the system is being used, such as the number of users, the number of processes running, and the amount of time spent on each process. This data can be used to identify areas where the system can be optimized.\n\n## Analyzing System Logs\n\nAnalyzing system logs involves collecting data from system logs, such as error messages and system warnings. This data can be used to identify potential problems and areas of improvement.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
        },
        {
            "datasource": {
                "type": "graphite",
                "uid": "${DS_GRAPHITE}"
            },
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "mappings": [],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "green",
                                "value": null
                            },
                            {
                                "color": "red",
                                "value": 80
                            }
                        ]
                    }
                },
                "overrides": []
            },
            "gridPos": {
                "h": 4,
                "w": 2,
                "x": 6,
                "y": 1
            },
            "id": 61862,
            "links": [],
            "maxDataPoints": 100,
            "options": {
                "colorMode": "value",
                "graphMode": "area",
                "justifyMode": "auto",
                "orientation": "auto",
                "reduceOptions": {
                    "calcs": [
                        "lastNotNull"
                    ],
                    "fields": "",
                    "values": false
                },
                "textMode": "auto"
            },
            "pluginVersion": "10.0.2",
            "targets": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "dsType": "graphite",
                    "groupBy": [
                        {
                            "params": [
                                "$interval"
                            ],
                            "type": "time"
                        },
                        {
                            "params": [
                                "null"
                            ],
                            "type": "fill"
                        }
                    ],
                    "measurement": "processes",
                    "policy": "default",
                    "refId": "A",
                    "resultFormat": "time_series",
                    "select": [
                        [
                            {
                                "params": [
                                    "zombies"
                                ],
                                "type": "field"
                            },
                            {
                                "params": [],
                                "type": "last"
                            }
                        ]
                    ],
                    "tags": [
                        {
                            "key": "host",
                            "operator": "=~",
                            "value": "/^$server$/"
                        }
                    ],
                    "target": "groupByNode(seriesByTag('host=~${server:regex}', 'name=opvagent.processes.zombies'), 'name', 'last')",
                    "textEditor": true
                }
            ],
            "title": "Zombies",
            "type": "stat",
            "description": "# What are Zombies?\nA Zombie is a computer process that has completed execution but still has an entry in the process table. Zombies are also known as defunct processes.\n\n# How do Zombies Form?\nZombies are created when a parent process terminates before its child process. This leaves the child process in an orphaned state, meaning it is still running but has no parent process to manage it.\n\n# What are the Effects of Zombies?\nZombies can create a number of problems, such as taking up system resources and memory, and preventing the system from functioning properly. They can also slow down the system and cause it to become unresponsive.\n\n# How to Prevent Zombies?\nThe best way to prevent Zombies is to make sure that all processes have a parent process to manage them. This can be done by using proper process management techniques, such as using the wait() system call to ensure that all child processes have been terminated before the parent process exits. Additionally, proper signal handling can help ensure that all child processes are properly terminated.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
        },
        {
            "datasource": {
                "type": "graphite",
                "uid": "${DS_GRAPHITE}"
            },
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "mappings": [],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "green",
                                "value": null
                            },
                            {
                                "color": "red",
                                "value": 80
                            }
                        ]
                    }
                },
                "overrides": []
            },
            "gridPos": {
                "h": 4,
                "w": 2,
                "x": 8,
                "y": 1
            },
            "id": 61864,
            "links": [],
            "maxDataPoints": 100,
            "options": {
                "colorMode": "value",
                "graphMode": "area",
                "justifyMode": "auto",
                "orientation": "auto",
                "reduceOptions": {
                    "calcs": [
                        "lastNotNull"
                    ],
                    "fields": "",
                    "values": false
                },
                "textMode": "auto"
            },
            "pluginVersion": "10.0.2",
            "targets": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "dsType": "graphite",
                    "groupBy": [
                        {
                            "params": [
                                "$interval"
                            ],
                            "type": "time"
                        },
                        {
                            "params": [
                                "null"
                            ],
                            "type": "fill"
                        }
                    ],
                    "measurement": "processes",
                    "policy": "default",
                    "refId": "A",
                    "resultFormat": "time_series",
                    "select": [
                        [
                            {
                                "params": [
                                    "total"
                                ],
                                "type": "field"
                            },
                            {
                                "params": [],
                                "type": "last"
                            }
                        ]
                    ],
                    "tags": [
                        {
                            "key": "host",
                            "operator": "=~",
                            "value": "/^$server$/"
                        }
                    ],
                    "target": "groupByNode(seriesByTag('host=~${server:regex}', 'name=opvagent.processes.total'), 'name', 'last')",
                    "textEditor": true
                }
            ],
            "title": "Processes",
            "type": "stat",
            "description": "## Process Scheduling\nProcess scheduling is the process of allocating processor time to various processes in order to optimize system performance and throughput. The operating system maintains a queue of ready-to-run processes and allocates processor time to each process in a round-robin fashion. This ensures that all processes have equal access to the processor and that no one process can hog the processor for an extended period of time.\n\n## Context Switching\nContext switching is the process of switching the processor from one process to another. When a process is switched out, the processor saves the current state of the process and then loads the new process. This allows the processor to quickly switch between processes without having to reload the entire program from memory.\n\n## Interrupts\nAn interrupt is a signal sent to the processor by a device or program when it needs attention. When the processor receives an interrupt, it stops what it is currently doing and responds to the interrupt. This allows the processor to quickly respond to external events and to ensure that important tasks are completed in a timely manner.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
        },
        {
            "datasource": {
                "type": "graphite",
                "uid": "${DS_GRAPHITE}"
            },
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "mappings": [],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "green",
                                "value": null
                            },
                            {
                                "color": "red",
                                "value": 80
                            }
                        ]
                    }
                },
                "overrides": []
            },
            "gridPos": {
                "h": 4,
                "w": 2,
                "x": 10,
                "y": 1
            },
            "id": 61865,
            "links": [],
            "maxDataPoints": 100,
            "options": {
                "colorMode": "value",
                "graphMode": "area",
                "justifyMode": "auto",
                "orientation": "auto",
                "reduceOptions": {
                    "calcs": [
                        "lastNotNull"
                    ],
                    "fields": "",
                    "values": false
                },
                "textMode": "auto"
            },
            "pluginVersion": "10.0.2",
            "targets": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "dsType": "graphite",
                    "groupBy": [
                        {
                            "params": [
                                "$interval"
                            ],
                            "type": "time"
                        },
                        {
                            "params": [
                                "null"
                            ],
                            "type": "fill"
                        }
                    ],
                    "measurement": "processes",
                    "policy": "default",
                    "refId": "A",
                    "resultFormat": "time_series",
                    "select": [
                        [
                            {
                                "params": [
                                    "total_threads"
                                ],
                                "type": "field"
                            },
                            {
                                "params": [],
                                "type": "last"
                            }
                        ]
                    ],
                    "tags": [
                        {
                            "key": "host",
                            "operator": "=~",
                            "value": "/^$server$/"
                        }
                    ],
                    "target": "groupByNode(seriesByTag('host=~${server:regex}', 'name=opvagent.processes.total_threads'), 'name', 'last')",
                    "textEditor": true
                }
            ],
            "title": "Threads",
            "type": "stat",
            "description": "# Threads\nThreads are the basic units of execution in a process. They are created and managed by the operating system, and are used to execute code within a process.\n\n## What are Threads?\nThreads are the smallest unit of a process that can be scheduled for execution by the operating system. They are independent of each other, and can be used to execute multiple tasks within a single process.\n\n## Benefits of Threads\nThreads can be used to improve the performance of a process, as they allow multiple tasks to be executed simultaneously. This can improve the overall efficiency of the system, as well as reduce the amount of time required to complete a task.\n\n## How are Threads Used?\nThreads are used to execute code within a process. They are managed by the operating system, and can be used to execute multiple tasks within a single process. This is beneficial for programs that require multiple tasks to be executed simultaneously, such as web servers and database applications.\n\n## Linux Performance Data\nLinux performance data is used to measure the performance of a Linux system. This data is used to identify potential performance issues, and to determine how to improve the performance of the system. This data includes information about processes, memory usage, disk usage, and other system resources.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
        },
        {
            "datasource": {
                "type": "graphite",
                "uid": "${DS_GRAPHITE}"
            },
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "mappings": [],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "green",
                                "value": null
                            },
                            {
                                "color": "red",
                                "value": 80
                            }
                        ]
                    },
                    "unit": "percent"
                },
                "overrides": []
            },
            "gridPos": {
                "h": 4,
                "w": 2,
                "x": 12,
                "y": 1
            },
            "id": 61861,
            "links": [],
            "maxDataPoints": 100,
            "options": {
                "orientation": "auto",
                "reduceOptions": {
                    "calcs": [
                        "lastNotNull"
                    ],
                    "fields": "",
                    "values": false
                },
                "showThresholdLabels": false,
                "showThresholdMarkers": true
            },
            "pluginVersion": "10.0.2",
            "targets": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "dsType": "graphite",
                    "groupBy": [
                        {
                            "params": [
                                "$interval"
                            ],
                            "type": "time"
                        },
                        {
                            "params": [
                                "null"
                            ],
                            "type": "fill"
                        }
                    ],
                    "measurement": "cpu",
                    "policy": "default",
                    "refId": "A",
                    "resultFormat": "time_series",
                    "select": [
                        [
                            {
                                "params": [
                                    "usage_idle"
                                ],
                                "type": "field"
                            },
                            {
                                "params": [],
                                "type": "last"
                            },
                            {
                                "params": [
                                    "* -1 + 100"
                                ],
                                "type": "math"
                            }
                        ]
                    ],
                    "tags": [
                        {
                            "key": "host",
                            "operator": "=~",
                            "value": "/^$server$/"
                        },
                        {
                            "condition": "AND",
                            "key": "cpu",
                            "operator": "=",
                            "value": "cpu-total"
                        }
                    ],
                    "target": "scale(groupByNode(seriesByTag('host=~${server:regex}', 'name=opvagent.cpu.usage_idle', 'cpu=cpu-total'), 'name', 'last'), 0.1)",
                    "textEditor": false
                }
            ],
            "title": "CPU usage",
            "type": "gauge",
            "description": "### CPU Usage\nCPU usage is a measure of how much of the processor\u2019s computing capacity is being used. It is an important metric to monitor in order to determine the health and performance of a Linux system.\n\n#### Monitoring CPU Usage\nMonitoring CPU usage is essential in order to ensure that the system is running at optimal performance. This can be done by using tools such as the Linux top command or the Linux ps command.\n\n#### Interpreting CPU Usage\nWhen interpreting CPU usage, it is important to consider the context of the usage. For example, a high CPU usage may indicate a system that is overloaded or a process that is taking up too much of the resources. On the other hand, a low CPU usage could indicate an underutilized system or a process that is not taking advantage of the full capacity of the processor.\n\n#### Troubleshooting High CPU Usage\nIf a system is experiencing high CPU usage, there are a few steps that can be taken to troubleshoot the issue. These include checking the system logs, examining the processes running on the system, and adjusting the system settings. It may also be necessary to restart the system or the processes in order to resolve the issue.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
        },
        {
            "datasource": {
                "type": "graphite",
                "uid": "${DS_GRAPHITE}"
            },
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "mappings": [],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "green",
                                "value": null
                            },
                            {
                                "color": "red",
                                "value": 80
                            }
                        ]
                    },
                    "unit": "percent"
                },
                "overrides": []
            },
            "gridPos": {
                "h": 4,
                "w": 2,
                "x": 14,
                "y": 1
            },
            "id": 61860,
            "links": [],
            "maxDataPoints": 100,
            "options": {
                "orientation": "auto",
                "reduceOptions": {
                    "calcs": [
                        "lastNotNull"
                    ],
                    "fields": "",
                    "values": false
                },
                "showThresholdLabels": false,
                "showThresholdMarkers": true
            },
            "pluginVersion": "10.0.2",
            "targets": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "dsType": "graphite",
                    "groupBy": [
                        {
                            "params": [
                                "$interval"
                            ],
                            "type": "time"
                        },
                        {
                            "params": [
                                "null"
                            ],
                            "type": "fill"
                        }
                    ],
                    "measurement": "mem",
                    "policy": "default",
                    "refId": "A",
                    "resultFormat": "time_series",
                    "select": [
                        [
                            {
                                "params": [
                                    "used_percent"
                                ],
                                "type": "field"
                            },
                            {
                                "params": [],
                                "type": "last"
                            }
                        ]
                    ],
                    "tags": [
                        {
                            "key": "host",
                            "operator": "=~",
                            "value": "/^$server$/"
                        }
                    ],
                    "target": "groupByNode(seriesByTag('host=~${server:regex}', 'name=opvagent.mem.used_percent'), 'name', 'last')",
                    "textEditor": true
                }
            ],
            "title": "RAM usage",
            "type": "gauge",
            "description": ":\n\n# RAM Usage\n\nRAM, or Random Access Memory, is a type of computer memory that is used to store frequently accessed data so that it can be quickly accessed. RAM usage is an important metric to measure the performance of a computer system.\n\n## Types of RAM\n\nRAM comes in two main types: volatile and non-volatile. Volatile RAM is used to store data temporarily, while non-volatile RAM is used to store data permanently.\n\n## RAM Usage in Linux\n\nIn Linux, RAM usage is monitored by the kernel, which keeps track of the amount of RAM being used by each process. The kernel also keeps track of the total amount of RAM available on the system.\n\n## Monitoring RAM Usage\n\nThere are several tools available for monitoring RAM usage in Linux, such as the free command-line tool 'top'. This tool can be used to view the total amount of RAM used, as well as the amount of RAM used by each process.\n\n## Optimizing RAM Usage\n\nOptimizing RAM usage is an important part of optimizing system performance. This can be done by ensuring that only necessary processes are running, and by using memory-efficient programs. Additionally, the Linux kernel can be tuned to use less RAM.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
        },
        {
            "datasource": {
                "type": "graphite",
                "uid": "${DS_GRAPHITE}"
            },
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "mappings": [],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "green",
                                "value": null
                            },
                            {
                                "color": "red",
                                "value": 80
                            }
                        ]
                    },
                    "unit": "percent"
                },
                "overrides": []
            },
            "gridPos": {
                "h": 4,
                "w": 2,
                "x": 16,
                "y": 1
            },
            "id": 61863,
            "links": [],
            "maxDataPoints": 100,
            "options": {
                "orientation": "auto",
                "reduceOptions": {
                    "calcs": [
                        "lastNotNull"
                    ],
                    "fields": "",
                    "values": false
                },
                "showThresholdLabels": false,
                "showThresholdMarkers": true
            },
            "pluginVersion": "10.0.2",
            "targets": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "dsType": "graphite",
                    "groupBy": [
                        {
                            "params": [
                                "$interval"
                            ],
                            "type": "time"
                        },
                        {
                            "params": [
                                "null"
                            ],
                            "type": "fill"
                        }
                    ],
                    "measurement": "swap",
                    "policy": "default",
                    "refId": "A",
                    "resultFormat": "time_series",
                    "select": [
                        [
                            {
                                "params": [
                                    "used_percent"
                                ],
                                "type": "field"
                            },
                            {
                                "params": [],
                                "type": "last"
                            }
                        ]
                    ],
                    "tags": [
                        {
                            "key": "host",
                            "operator": "=~",
                            "value": "/^$server$/"
                        }
                    ],
                    "target": "groupByNode(seriesByTag('host=~${server:regex}', 'name=opvagent.swap.used_percent'), 'name', 'last')",
                    "textEditor": true
                }
            ],
            "title": "Swap usage",
            "type": "gauge",
            "description": ":\n\n# Swap Usage\nSwap is a part of a computer's virtual memory, which is an area of a hard drive that is used as an extension of a computer's physical memory. It is used to store data that is not currently needed in RAM, but may be needed in the future.\n\n## What is Swap?\nSwap is a space on a hard drive that is used to increase the amount of virtual memory available to the operating system. It is used when the system needs more memory than what is available in RAM.\n\n## How Swap Works\nWhen a computer is running low on RAM, the operating system will move some of the data from RAM to the swap space on the hard drive. This allows the system to continue running without having to shut down any of the running programs. When the system needs the data again, it will be moved back into RAM.\n\n## Benefits of Swap\nThe main benefit of swap is that it allows the system to continue running when there is not enough RAM available. This can be especially useful for systems that have limited RAM, such as older computers. Additionally, it can help to improve system performance by reducing the amount of time the system spends waiting for data to be loaded from the hard drive.\n\n## Disadvantages of Swap\nThe main disadvantage of swap is that it can be slower than RAM. This is because the data needs to be moved from the hard drive to RAM in order for it to be\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
        },
        {
            "datasource": {
                "type": "graphite",
                "uid": "${DS_GRAPHITE}"
            },
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "mappings": [],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "green",
                                "value": null
                            },
                            {
                                "color": "red",
                                "value": 80
                            }
                        ]
                    },
                    "unit": "percent"
                },
                "overrides": []
            },
            "gridPos": {
                "h": 4,
                "w": 2,
                "x": 18,
                "y": 1
            },
            "id": 61866,
            "links": [],
            "maxDataPoints": 100,
            "options": {
                "orientation": "auto",
                "reduceOptions": {
                    "calcs": [
                        "lastNotNull"
                    ],
                    "fields": "",
                    "values": false
                },
                "showThresholdLabels": false,
                "showThresholdMarkers": true
            },
            "pluginVersion": "10.0.2",
            "targets": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "dsType": "graphite",
                    "groupBy": [
                        {
                            "params": [
                                "$interval"
                            ],
                            "type": "time"
                        },
                        {
                            "params": [
                                "null"
                            ],
                            "type": "fill"
                        }
                    ],
                    "measurement": "disk",
                    "policy": "default",
                    "refId": "A",
                    "resultFormat": "time_series",
                    "select": [
                        [
                            {
                                "params": [
                                    "used_percent"
                                ],
                                "type": "field"
                            },
                            {
                                "params": [],
                                "type": "last"
                            }
                        ]
                    ],
                    "tags": [
                        {
                            "key": "host",
                            "operator": "=~",
                            "value": "/^$server$/"
                        },
                        {
                            "condition": "AND",
                            "key": "path",
                            "operator": "=",
                            "value": "/"
                        }
                    ],
                    "target": "groupByNode(seriesByTag('host=~${server:regex}', 'name=opvagent.disk.used_percent', 'path=~${mountpoint:regex}'), 'name', 'last')",
                    "textEditor": true
                }
            ],
            "title": "RootFS used",
            "type": "gauge",
            "description": ":\n\n# RootFS\nRootFS, short for root file system, is the top-level directory of a Linux system that contains all other files and directories. It is the foundation of the Linux operating system, and it contains the kernel, system libraries, and system utilities.\n\n## Structure\nRootFS is a hierarchical tree structure, with the root directory at the top. The root directory contains all other directories and files, including system configuration files, user files, and application files.\n\n## Components\nRootFS includes a number of components, such as the bootloader, kernel, and initramfs. It also contains the system libraries, system utilities, and user files.\n\n## Usage\nRootFS is used to boot the Linux operating system, as well as to manage system processes and system resources. It is also used to install and update applications and system files.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
        },
        {
            "datasource": {
                "type": "graphite",
                "uid": "${DS_GRAPHITE}"
            },
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "thresholds"
                    },
                    "mappings": [],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "green",
                                "value": null
                            },
                            {
                                "color": "red",
                                "value": 80
                            }
                        ]
                    },
                    "unit": "percent"
                },
                "overrides": []
            },
            "gridPos": {
                "h": 4,
                "w": 4,
                "x": 20,
                "y": 1
            },
            "id": 61867,
            "links": [],
            "maxDataPoints": 100,
            "options": {
                "colorMode": "value",
                "graphMode": "area",
                "justifyMode": "auto",
                "orientation": "auto",
                "reduceOptions": {
                    "calcs": [
                        "lastNotNull"
                    ],
                    "fields": "",
                    "values": false
                },
                "textMode": "auto"
            },
            "pluginVersion": "10.0.2",
            "targets": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "dsType": "graphite",
                    "groupBy": [
                        {
                            "params": [
                                "$interval"
                            ],
                            "type": "time"
                        },
                        {
                            "params": [
                                "null"
                            ],
                            "type": "fill"
                        }
                    ],
                    "measurement": "cpu",
                    "policy": "default",
                    "query": "SELECT non_negative_derivative(mean(\"usage_iowait\"), 1s) FROM \"cpu\" WHERE \"host\" =~ /^$server$/ AND \"cpu\" = 'cpu-total' AND $timeFilter GROUP BY time($interval) fill(null)",
                    "rawQuery": false,
                    "refId": "A",
                    "resultFormat": "time_series",
                    "select": [
                        [
                            {
                                "params": [
                                    "usage_iowait"
                                ],
                                "type": "field"
                            },
                            {
                                "params": [],
                                "type": "last"
                            }
                        ]
                    ],
                    "tags": [
                        {
                            "key": "host",
                            "operator": "=~",
                            "value": "/^$server$/"
                        },
                        {
                            "condition": "AND",
                            "key": "cpu",
                            "operator": "=",
                            "value": "cpu-total"
                        }
                    ],
                    "target": "groupByNode(seriesByTag('host=~${server:regex}', 'name=opvagent.cpu.usage_iowait'), 'name', 'last')",
                    "textEditor": true
                }
            ],
            "title": "IOWait",
            "type": "stat",
            "description": "## IOWait\n\nIOWait is a metric used to measure the amount of time a process spends waiting for input/output (I/O) operations to be completed. It is an important indicator of system performance, as it reflects how much time the processor is spending waiting for data from the disk or other I/O devices.\n\n## What is IOWait?\n\nIOWait is a measurement of the time a process spends waiting for I/O operations to complete. It is an important metric to understand the performance of a system, as it reflects how much time the processor is spending waiting for data from the disk or other I/O devices.\n\n## How is IOWait Calculated?\n\nIOWait is calculated by subtracting the amount of time the processor is actively working from the time the processor is idle. The result is the amount of time spent waiting for I/O operations to complete.\n\n## What Does High IOWait Mean?\n\nHigh IOWait means that the processor is spending a large amount of time waiting for I/O operations to complete. This can be caused by a number of factors, including slow disks, slow network connections, or inefficient I/O operations. If the IOWait is too high, it can lead to poor system performance.\n\n## How Can IOWait Be Improved?\n\nIOWait can be improved by optimizing the I/O operations and\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
        },
        {
            "collapsed": true,
            "datasource": {
                "type": "graphite",
                "uid": "opvizorgraphite"
            },
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 5
            },
            "id": 61978,
            "panels": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "fieldConfig": {
                        "defaults": {
                            "color": {
                                "mode": "palette-classic"
                            },
                            "custom": {
                                "axisCenteredZero": false,
                                "axisColorMode": "text",
                                "axisLabel": "",
                                "axisPlacement": "auto",
                                "barAlignment": 0,
                                "drawStyle": "line",
                                "fillOpacity": 10,
                                "gradientMode": "none",
                                "hideFrom": {
                                    "legend": false,
                                    "tooltip": false,
                                    "viz": false
                                },
                                "lineInterpolation": "linear",
                                "lineWidth": 1,
                                "pointSize": 5,
                                "scaleDistribution": {
                                    "type": "linear"
                                },
                                "showPoints": "never",
                                "spanNulls": true,
                                "stacking": {
                                    "group": "A",
                                    "mode": "none"
                                },
                                "thresholdsStyle": {
                                    "mode": "off"
                                }
                            },
                            "mappings": [],
                            "max": 100,
                            "min": 0,
                            "thresholds": {
                                "mode": "absolute",
                                "steps": [
                                    {
                                        "color": "green"
                                    },
                                    {
                                        "color": "red",
                                        "value": 80
                                    }
                                ]
                            },
                            "unit": "percent"
                        },
                        "overrides": []
                    },
                    "gridPos": {
                        "h": 10,
                        "w": 12,
                        "x": 0,
                        "y": 6
                    },
                    "id": 28239,
                    "interval": "1m",
                    "links": [],
                    "options": {
                        "legend": {
                            "calcs": [
                                "mean",
                                "lastNotNull",
                                "max",
                                "min"
                            ],
                            "displayMode": "table",
                            "placement": "bottom",
                            "showLegend": true
                        },
                        "tooltip": {
                            "mode": "multi",
                            "sort": "none"
                        }
                    },
                    "pluginVersion": "9.5.1",
                    "targets": [
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": true,
                            "measurement": "cpu_percentageBusy",
                            "policy": "default",
                            "query": "SELECT mean(usage_user) as \"user\", mean(usage_system) as \"system\", mean(usage_softirq) as \"softirq\", mean(usage_steal) as \"steal\", mean(usage_nice) as \"nice\", mean(usage_irq) as \"irq\", mean(usage_iowait) as \"iowait\", mean(usage_guest) as \"guest\", mean(usage_guest_nice) as \"guest_nice\"  FROM \"cpu\" WHERE \"host\" =~ /$server$/ and cpu = 'cpu-total' AND $timeFilter GROUP BY time($interval), *",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "B",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.cpu.usage_idle', 'cpu=cpu-total'), 'idle')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "cpu_percentageBusy",
                            "policy": "default",
                            "query": "SELECT mean(usage_user) as \"user\", mean(usage_system) as \"system\", mean(usage_softirq) as \"softirq\", mean(usage_steal) as \"steal\", mean(usage_nice) as \"nice\", mean(usage_irq) as \"irq\", mean(usage_iowait) as \"iowait\", mean(usage_guest) as \"guest\", mean(usage_guest_nice) as \"guest_nice\"  FROM \"cpu\" WHERE \"host\" =~ /$server$/ and cpu = 'cpu-total' AND $timeFilter GROUP BY time($interval), *",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "A",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.cpu.usage_user', 'cpu=cpu-total'), '$server user')",
                            "textEditor": false
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "cpu_percentageBusy",
                            "policy": "default",
                            "query": "SELECT mean(usage_user) as \"user\", mean(usage_system) as \"system\", mean(usage_softirq) as \"softirq\", mean(usage_steal) as \"steal\", mean(usage_nice) as \"nice\", mean(usage_irq) as \"irq\", mean(usage_iowait) as \"iowait\", mean(usage_guest) as \"guest\", mean(usage_guest_nice) as \"guest_nice\"  FROM \"cpu\" WHERE \"host\" =~ /$server$/ and cpu = 'cpu-total' AND $timeFilter GROUP BY time($interval), *",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "C",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.cpu.usage_system', 'cpu=cpu-total'), '$server system')",
                            "textEditor": false
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "cpu_percentageBusy",
                            "policy": "default",
                            "query": "SELECT mean(usage_user) as \"user\", mean(usage_system) as \"system\", mean(usage_softirq) as \"softirq\", mean(usage_steal) as \"steal\", mean(usage_nice) as \"nice\", mean(usage_irq) as \"irq\", mean(usage_iowait) as \"iowait\", mean(usage_guest) as \"guest\", mean(usage_guest_nice) as \"guest_nice\"  FROM \"cpu\" WHERE \"host\" =~ /$server$/ and cpu = 'cpu-total' AND $timeFilter GROUP BY time($interval), *",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "D",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.cpu.usage_softirq', 'cpu=cpu-total'), '$server softirq')",
                            "textEditor": false
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "cpu_percentageBusy",
                            "policy": "default",
                            "query": "SELECT mean(usage_user) as \"user\", mean(usage_system) as \"system\", mean(usage_softirq) as \"softirq\", mean(usage_steal) as \"steal\", mean(usage_nice) as \"nice\", mean(usage_irq) as \"irq\", mean(usage_iowait) as \"iowait\", mean(usage_guest) as \"guest\", mean(usage_guest_nice) as \"guest_nice\"  FROM \"cpu\" WHERE \"host\" =~ /$server$/ and cpu = 'cpu-total' AND $timeFilter GROUP BY time($interval), *",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "E",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.cpu.usage_steal', 'cpu=cpu-total'), '$server steal')",
                            "textEditor": false
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "cpu_percentageBusy",
                            "policy": "default",
                            "query": "SELECT mean(usage_user) as \"user\", mean(usage_system) as \"system\", mean(usage_softirq) as \"softirq\", mean(usage_steal) as \"steal\", mean(usage_nice) as \"nice\", mean(usage_irq) as \"irq\", mean(usage_iowait) as \"iowait\", mean(usage_guest) as \"guest\", mean(usage_guest_nice) as \"guest_nice\"  FROM \"cpu\" WHERE \"host\" =~ /$server$/ and cpu = 'cpu-total' AND $timeFilter GROUP BY time($interval), *",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "F",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.cpu.usage_nice', 'cpu=cpu-total'), '$server nice')",
                            "textEditor": false
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "cpu_percentageBusy",
                            "policy": "default",
                            "query": "SELECT mean(usage_user) as \"user\", mean(usage_system) as \"system\", mean(usage_softirq) as \"softirq\", mean(usage_steal) as \"steal\", mean(usage_nice) as \"nice\", mean(usage_irq) as \"irq\", mean(usage_iowait) as \"iowait\", mean(usage_guest) as \"guest\", mean(usage_guest_nice) as \"guest_nice\"  FROM \"cpu\" WHERE \"host\" =~ /$server$/ and cpu = 'cpu-total' AND $timeFilter GROUP BY time($interval), *",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "G",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.cpu.usage_irq', 'cpu=cpu-total'), '$server irq')",
                            "textEditor": false
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "cpu_percentageBusy",
                            "policy": "default",
                            "query": "SELECT mean(usage_user) as \"user\", mean(usage_system) as \"system\", mean(usage_softirq) as \"softirq\", mean(usage_steal) as \"steal\", mean(usage_nice) as \"nice\", mean(usage_irq) as \"irq\", mean(usage_iowait) as \"iowait\", mean(usage_guest) as \"guest\", mean(usage_guest_nice) as \"guest_nice\"  FROM \"cpu\" WHERE \"host\" =~ /$server$/ and cpu = 'cpu-total' AND $timeFilter GROUP BY time($interval), *",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "H",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.cpu.usage_iowait', 'cpu=cpu-total'), '$server iowait')",
                            "textEditor": false
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "cpu_percentageBusy",
                            "policy": "default",
                            "query": "SELECT mean(usage_user) as \"user\", mean(usage_system) as \"system\", mean(usage_softirq) as \"softirq\", mean(usage_steal) as \"steal\", mean(usage_nice) as \"nice\", mean(usage_irq) as \"irq\", mean(usage_iowait) as \"iowait\", mean(usage_guest) as \"guest\", mean(usage_guest_nice) as \"guest_nice\"  FROM \"cpu\" WHERE \"host\" =~ /$server$/ and cpu = 'cpu-total' AND $timeFilter GROUP BY time($interval), *",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "I",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.cpu.usage_guest', 'cpu=cpu-total'), '$server guest')",
                            "textEditor": false
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "cpu_percentageBusy",
                            "policy": "default",
                            "query": "SELECT mean(usage_user) as \"user\", mean(usage_system) as \"system\", mean(usage_softirq) as \"softirq\", mean(usage_steal) as \"steal\", mean(usage_nice) as \"nice\", mean(usage_irq) as \"irq\", mean(usage_iowait) as \"iowait\", mean(usage_guest) as \"guest\", mean(usage_guest_nice) as \"guest_nice\"  FROM \"cpu\" WHERE \"host\" =~ /$server$/ and cpu = 'cpu-total' AND $timeFilter GROUP BY time($interval), *",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "J",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.cpu.usage_guest_nice', 'cpu=cpu-total'), '$server guest_nice')",
                            "textEditor": false
                        }
                    ],
                    "title": "CPU usage",
                    "type": "timeseries",
                    "description": ":\n\n# CPU Usage\n\nCPU usage is a measure of how much processing power is being used by the system at any given time. It is important to monitor CPU usage to ensure that the system is running efficiently and to identify any potential problems.\n\n## Overview\n\nCPU usage is measured in percentage, and it can be broken down into user, system, and idle usage. User usage is the amount of processing power used by applications running on the system, while system usage is the amount of processing power used by the operating system itself. Idle usage is the amount of processing power not being used.\n\n## Monitoring\n\nMonitoring CPU usage is important to ensure that the system is running efficiently and to identify any potential problems. Most modern operating systems include tools that allow users to monitor their CPU usage, such as the Windows Task Manager or the Linux top command.\n\n## Problems\n\nIf the CPU usage is consistently high, it can indicate that the system is overloaded or that there is a problem with the system. High CPU usage can also be caused by software bugs or viruses. It is important to identify the cause of the high CPU usage in order to resolve the issue.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
                },
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "fieldConfig": {
                        "defaults": {
                            "color": {
                                "mode": "palette-classic"
                            },
                            "custom": {
                                "axisCenteredZero": false,
                                "axisColorMode": "text",
                                "axisLabel": "",
                                "axisPlacement": "auto",
                                "barAlignment": 0,
                                "drawStyle": "line",
                                "fillOpacity": 0,
                                "gradientMode": "none",
                                "hideFrom": {
                                    "legend": false,
                                    "tooltip": false,
                                    "viz": false
                                },
                                "lineInterpolation": "linear",
                                "lineWidth": 1,
                                "pointSize": 5,
                                "scaleDistribution": {
                                    "type": "linear"
                                },
                                "showPoints": "never",
                                "spanNulls": true,
                                "stacking": {
                                    "group": "A",
                                    "mode": "none"
                                },
                                "thresholdsStyle": {
                                    "mode": "off"
                                }
                            },
                            "mappings": [],
                            "min": 0,
                            "thresholds": {
                                "mode": "absolute",
                                "steps": [
                                    {
                                        "color": "green"
                                    },
                                    {
                                        "color": "red",
                                        "value": 80
                                    }
                                ]
                            },
                            "unit": "short"
                        },
                        "overrides": []
                    },
                    "gridPos": {
                        "h": 10,
                        "w": 12,
                        "x": 12,
                        "y": 6
                    },
                    "id": 54694,
                    "interval": "1m",
                    "links": [],
                    "options": {
                        "legend": {
                            "calcs": [
                                "mean",
                                "lastNotNull",
                                "max",
                                "min"
                            ],
                            "displayMode": "table",
                            "placement": "bottom",
                            "showLegend": true
                        },
                        "tooltip": {
                            "mode": "multi",
                            "sort": "none"
                        }
                    },
                    "pluginVersion": "9.5.1",
                    "targets": [
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "system_load1",
                            "policy": "default",
                            "query": "SELECT mean(load1) as short,mean(load5) as medium,mean(load15) as long FROM \"system\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), * ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "A",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.system.load1'), '$server short')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "system_load1",
                            "policy": "default",
                            "query": "SELECT mean(load1) as short,mean(load5) as medium,mean(load15) as long FROM \"system\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), * ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "B",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.system.load5'), '$server medium')",
                            "textEditor": false
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "system_load1",
                            "policy": "default",
                            "query": "SELECT mean(load1) as short,mean(load5) as medium,mean(load15) as long FROM \"system\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), * ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "C",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.system.load15'), '$server long')",
                            "textEditor": false
                        }
                    ],
                    "title": "Load averages",
                    "type": "timeseries",
                    "description": "# Load Averages\nLoad averages are a measure of the system load over a period of time. It is a way of measuring how busy the system is and how much work it is doing.\n\n## What Are Load Averages?\nLoad averages are a measure of the amount of work that the system is doing over a period of time. The load average is the average number of processes that are either in a runnable or uninterruptible state. A load average of 1 means that on average, there is one process that is either running or waiting for an I/O operation.\n\n## How Are Load Averages Calculated?\nLoad averages are calculated by taking the running average of the number of processes that are either in a runnable or uninterruptible state over a period of time. This average is calculated over the last minute, 5 minutes, and 15 minutes.\n\n## What Do the Numbers Mean?\nThe load averages are expressed as three numbers. The first number is the average over the last minute, the second is the average over the last 5 minutes, and the third is the average over the last 15 minutes. A higher number indicates that the system is doing more work and is busier. A lower number indicates that the system is doing less work and is less busy.\n\n## How Can Load Averages Be Used?\nLoad averages can be used to identify system performance issues. If the load averages are consistently high\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
                },
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "fieldConfig": {
                        "defaults": {
                            "color": {
                                "mode": "palette-classic"
                            },
                            "custom": {
                                "axisCenteredZero": false,
                                "axisColorMode": "text",
                                "axisLabel": "",
                                "axisPlacement": "auto",
                                "barAlignment": 0,
                                "drawStyle": "line",
                                "fillOpacity": 10,
                                "gradientMode": "none",
                                "hideFrom": {
                                    "legend": false,
                                    "tooltip": false,
                                    "viz": false
                                },
                                "lineInterpolation": "linear",
                                "lineWidth": 1,
                                "pointSize": 5,
                                "scaleDistribution": {
                                    "type": "linear"
                                },
                                "showPoints": "never",
                                "spanNulls": true,
                                "stacking": {
                                    "group": "A",
                                    "mode": "none"
                                },
                                "thresholdsStyle": {
                                    "mode": "off"
                                }
                            },
                            "mappings": [],
                            "min": 0,
                            "thresholds": {
                                "mode": "absolute",
                                "steps": [
                                    {
                                        "color": "green"
                                    },
                                    {
                                        "color": "red",
                                        "value": 80
                                    }
                                ]
                            },
                            "unit": "bytes"
                        },
                        "overrides": [
                            {
                                "matcher": {
                                    "id": "byRegexp",
                                    "options": "/mem_total/"
                                },
                                "properties": [
                                    {
                                        "id": "color",
                                        "value": {
                                            "fixedColor": "#BF1B00",
                                            "mode": "fixed"
                                        }
                                    },
                                    {
                                        "id": "custom.fillOpacity",
                                        "value": 0
                                    },
                                    {
                                        "id": "custom.lineWidth",
                                        "value": 2
                                    }
                                ]
                            }
                        ]
                    },
                    "gridPos": {
                        "h": 11,
                        "w": 12,
                        "x": 0,
                        "y": 16
                    },
                    "id": 12054,
                    "interval": "1m",
                    "links": [],
                    "options": {
                        "legend": {
                            "calcs": [
                                "mean",
                                "lastNotNull",
                                "max",
                                "min"
                            ],
                            "displayMode": "table",
                            "placement": "bottom",
                            "showLegend": true
                        },
                        "tooltip": {
                            "mode": "multi",
                            "sort": "none"
                        }
                    },
                    "pluginVersion": "9.5.1",
                    "targets": [
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "mem_inactive",
                            "policy": "default",
                            "query": "SELECT mean(total) as total, mean(used) as used, mean(cached) as cached, mean(free) as free, mean(buffered) as buffered  FROM \"mem\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "A",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.mem.total'), '$server total')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "mem_inactive",
                            "policy": "default",
                            "query": "SELECT mean(total) as total, mean(used) as used, mean(cached) as cached, mean(free) as free, mean(buffered) as buffered  FROM \"mem\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "B",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.mem.cached'), '$server cached')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "mem_inactive",
                            "policy": "default",
                            "query": "SELECT mean(total) as total, mean(used) as used, mean(cached) as cached, mean(free) as free, mean(buffered) as buffered  FROM \"mem\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "C",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.mem.used'), '$server used')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "mem_inactive",
                            "policy": "default",
                            "query": "SELECT mean(total) as total, mean(used) as used, mean(cached) as cached, mean(free) as free, mean(buffered) as buffered  FROM \"mem\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "D",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.mem.free'), '$server free')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "mem_inactive",
                            "policy": "default",
                            "query": "SELECT mean(total) as total, mean(used) as used, mean(cached) as cached, mean(free) as free, mean(buffered) as buffered  FROM \"mem\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "E",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.mem.buffered'), '$server buffered')",
                            "textEditor": true
                        }
                    ],
                    "title": "Memory usage",
                    "type": "timeseries",
                    "description": "# Memory Usage\nMemory usage is an important metric to measure the performance of a Linux operating system. It is a measure of the amount of RAM currently being used by the system and its processes.\n\n## RAM\nRandom Access Memory (RAM) is a type of computer memory that stores data and programs temporarily, allowing for quick access. When RAM is full, the system will use virtual memory, which is stored on the hard drive.\n\n## System Memory\nSystem memory is the total amount of RAM installed in the system. It is important to track system memory usage to ensure that the system is not running out of RAM.\n\n## Process Memory\nProcess memory is the amount of RAM used by each process. It is important to monitor process memory usage to ensure that processes are not using too much RAM and causing the system to slow down.\n\n## Memory Utilization\nMemory utilization is the percentage of RAM being used by the system and its processes. It is important to monitor memory utilization to ensure that the system is not running out of RAM.\n\n## Memory Leaks\nMemory leaks occur when a process uses more RAM than it needs. It is important to monitor for memory leaks to ensure that the system is not running out of RAM.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
                },
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "fieldConfig": {
                        "defaults": {
                            "color": {
                                "mode": "palette-classic"
                            },
                            "custom": {
                                "axisCenteredZero": false,
                                "axisColorMode": "text",
                                "axisLabel": "",
                                "axisPlacement": "auto",
                                "barAlignment": 0,
                                "drawStyle": "line",
                                "fillOpacity": 10,
                                "gradientMode": "none",
                                "hideFrom": {
                                    "legend": false,
                                    "tooltip": false,
                                    "viz": false
                                },
                                "lineInterpolation": "linear",
                                "lineWidth": 1,
                                "pointSize": 5,
                                "scaleDistribution": {
                                    "type": "linear"
                                },
                                "showPoints": "never",
                                "spanNulls": true,
                                "stacking": {
                                    "group": "A",
                                    "mode": "none"
                                },
                                "thresholdsStyle": {
                                    "mode": "off"
                                }
                            },
                            "mappings": [],
                            "thresholds": {
                                "mode": "absolute",
                                "steps": [
                                    {
                                        "color": "green"
                                    },
                                    {
                                        "color": "red",
                                        "value": 80
                                    }
                                ]
                            },
                            "unit": "short"
                        },
                        "overrides": []
                    },
                    "gridPos": {
                        "h": 11,
                        "w": 12,
                        "x": 12,
                        "y": 16
                    },
                    "id": 61852,
                    "links": [],
                    "options": {
                        "legend": {
                            "calcs": [
                                "mean",
                                "lastNotNull",
                                "max",
                                "min"
                            ],
                            "displayMode": "table",
                            "placement": "bottom",
                            "showLegend": true
                        },
                        "tooltip": {
                            "mode": "multi",
                            "sort": "none"
                        }
                    },
                    "pluginVersion": "9.5.1",
                    "targets": [
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "groupBy": [
                                {
                                    "params": [
                                        "$interval"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "params": [
                                        "null"
                                    ],
                                    "type": "fill"
                                }
                            ],
                            "measurement": "processes",
                            "policy": "default",
                            "query": "SELECT mean(running) as running, mean(blocked) as blocked, mean(sleeping) as sleeping, mean(stopped) as stopped, mean(zombies) as zombies, mean(paging) as paging, mean(unknown) as unknown FROM \"processes\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "B",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "blocked"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [
                                {
                                    "key": "host",
                                    "operator": "=~",
                                    "value": "/^$server$/"
                                }
                            ],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.processes.running'), '$server running')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "groupBy": [
                                {
                                    "params": [
                                        "$interval"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "params": [
                                        "null"
                                    ],
                                    "type": "fill"
                                }
                            ],
                            "hide": false,
                            "measurement": "processes",
                            "policy": "default",
                            "query": "SELECT mean(running) as running, mean(blocked) as blocked, mean(sleeping) as sleeping, mean(stopped) as stopped, mean(zombies) as zombies, mean(paging) as paging, mean(unknown) as unknown FROM \"processes\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "A",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "blocked"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [
                                {
                                    "key": "host",
                                    "operator": "=~",
                                    "value": "/^$server$/"
                                }
                            ],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.processes.blocked'), '$server blocked')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "groupBy": [
                                {
                                    "params": [
                                        "$interval"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "params": [
                                        "null"
                                    ],
                                    "type": "fill"
                                }
                            ],
                            "hide": false,
                            "measurement": "processes",
                            "policy": "default",
                            "query": "SELECT mean(running) as running, mean(blocked) as blocked, mean(sleeping) as sleeping, mean(stopped) as stopped, mean(zombies) as zombies, mean(paging) as paging, mean(unknown) as unknown FROM \"processes\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "C",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "blocked"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [
                                {
                                    "key": "host",
                                    "operator": "=~",
                                    "value": "/^$server$/"
                                }
                            ],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.processes.sleeping'), '$server sleeping')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "groupBy": [
                                {
                                    "params": [
                                        "$interval"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "params": [
                                        "null"
                                    ],
                                    "type": "fill"
                                }
                            ],
                            "hide": false,
                            "measurement": "processes",
                            "policy": "default",
                            "query": "SELECT mean(running) as running, mean(blocked) as blocked, mean(sleeping) as sleeping, mean(stopped) as stopped, mean(zombies) as zombies, mean(paging) as paging, mean(unknown) as unknown FROM \"processes\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "D",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "blocked"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [
                                {
                                    "key": "host",
                                    "operator": "=~",
                                    "value": "/^$server$/"
                                }
                            ],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.processes.stopped'), '$server stopped')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "groupBy": [
                                {
                                    "params": [
                                        "$interval"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "params": [
                                        "null"
                                    ],
                                    "type": "fill"
                                }
                            ],
                            "hide": false,
                            "measurement": "processes",
                            "policy": "default",
                            "query": "SELECT mean(running) as running, mean(blocked) as blocked, mean(sleeping) as sleeping, mean(stopped) as stopped, mean(zombies) as zombies, mean(paging) as paging, mean(unknown) as unknown FROM \"processes\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "E",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "blocked"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [
                                {
                                    "key": "host",
                                    "operator": "=~",
                                    "value": "/^$server$/"
                                }
                            ],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.processes.zombies'), '$server zombies')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "groupBy": [
                                {
                                    "params": [
                                        "$interval"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "params": [
                                        "null"
                                    ],
                                    "type": "fill"
                                }
                            ],
                            "hide": false,
                            "measurement": "processes",
                            "policy": "default",
                            "query": "SELECT mean(running) as running, mean(blocked) as blocked, mean(sleeping) as sleeping, mean(stopped) as stopped, mean(zombies) as zombies, mean(paging) as paging, mean(unknown) as unknown FROM \"processes\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "F",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "blocked"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [
                                {
                                    "key": "host",
                                    "operator": "=~",
                                    "value": "/^$server$/"
                                }
                            ],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.processes.paging'), '$server paging')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "groupBy": [
                                {
                                    "params": [
                                        "$interval"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "params": [
                                        "null"
                                    ],
                                    "type": "fill"
                                }
                            ],
                            "hide": false,
                            "measurement": "processes",
                            "policy": "default",
                            "query": "SELECT mean(running) as running, mean(blocked) as blocked, mean(sleeping) as sleeping, mean(stopped) as stopped, mean(zombies) as zombies, mean(paging) as paging, mean(unknown) as unknown FROM \"processes\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "G",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "blocked"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [
                                {
                                    "key": "host",
                                    "operator": "=~",
                                    "value": "/^$server$/"
                                }
                            ],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.processes.unknown'), '$server unknown')",
                            "textEditor": true
                        }
                    ],
                    "title": "Processes",
                    "type": "timeseries",
                    "description": "## Scheduling\n\nProcess scheduling is the basis of multitasking in a computer system. It is a process that assigns CPU resources to multiple processes that are running simultaneously. The operating system (OS) uses scheduling algorithms to determine which process to allocate the CPU to at any given time. The scheduling algorithm can be either preemptive or non-preemptive, depending on the OS. Preemptive scheduling allows the OS to interrupt a process that is running and assign the CPU to another process with a higher priority. Non-preemptive scheduling assigns the CPU to a process until it is finished before assigning it to another process.\n\n## Context Switching\n\nContext switching is the process of switching from one process to another. When a process is switched out, the OS saves the state of the process, including the CPU registers and program counter, so that when the process is switched back in, the process can continue from where it left off. Context switching is necessary for multitasking, as it allows the OS to switch between processes to ensure that all processes get a fair share of CPU time.\n\n## Virtual Memory\n\nVirtual memory is a technique used by the OS to allow programs to use more memory than is physically available in the system. It works by using disk space to simulate additional RAM, allowing programs to access more memory than is physically available. The OS manages the virtual memory by allocating memory to programs and then swapping memory pages between RAM and disk as needed.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
                },
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "fieldConfig": {
                        "defaults": {
                            "color": {
                                "mode": "palette-classic"
                            },
                            "custom": {
                                "axisCenteredZero": false,
                                "axisColorMode": "text",
                                "axisLabel": "",
                                "axisPlacement": "auto",
                                "barAlignment": 0,
                                "drawStyle": "line",
                                "fillOpacity": 10,
                                "gradientMode": "none",
                                "hideFrom": {
                                    "legend": false,
                                    "tooltip": false,
                                    "viz": false
                                },
                                "lineInterpolation": "linear",
                                "lineWidth": 1,
                                "pointSize": 5,
                                "scaleDistribution": {
                                    "type": "linear"
                                },
                                "showPoints": "never",
                                "spanNulls": true,
                                "stacking": {
                                    "group": "A",
                                    "mode": "none"
                                },
                                "thresholdsStyle": {
                                    "mode": "off"
                                }
                            },
                            "mappings": [],
                            "thresholds": {
                                "mode": "absolute",
                                "steps": [
                                    {
                                        "color": "green"
                                    },
                                    {
                                        "color": "red",
                                        "value": 80
                                    }
                                ]
                            },
                            "unit": "ops"
                        },
                        "overrides": []
                    },
                    "gridPos": {
                        "h": 6,
                        "w": 12,
                        "x": 0,
                        "y": 27
                    },
                    "id": 61960,
                    "links": [],
                    "options": {
                        "legend": {
                            "calcs": [
                                "mean",
                                "lastNotNull",
                                "max",
                                "min"
                            ],
                            "displayMode": "table",
                            "placement": "bottom",
                            "showLegend": true
                        },
                        "tooltip": {
                            "mode": "multi",
                            "sort": "none"
                        }
                    },
                    "pluginVersion": "9.5.1",
                    "targets": [
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "groupBy": [
                                {
                                    "params": [
                                        "$interval"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "params": [
                                        "null"
                                    ],
                                    "type": "fill"
                                }
                            ],
                            "hide": false,
                            "measurement": "kernel",
                            "policy": "default",
                            "query": "SELECT non_negative_derivative(mean(processes_forked),1s) as forks FROM \"kernel\" WHERE \"host\" =~ /^$server$/ AND $timeFilter GROUP BY time($interval), host fill(null)",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "A",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "processes_forked"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [
                                {
                                    "key": "host",
                                    "operator": "=~",
                                    "value": "/^$server$/"
                                }
                            ],
                            "target": "alias(nonNegativeDerivative(summarize(seriesByTag('host=~${server:regex}', 'name=opvagent.kernel.processes_forked'), '1min', 'sum', false)), '$server forked')",
                            "textEditor": true
                        }
                    ],
                    "title": "Forks",
                    "type": "timeseries",
                    "description": ".\n\n# What is a Fork?\nA fork is a copy of a project's source code that is created by a user or group of users. It allows developers to make changes to the original code without impacting the original project. Forks can be used to create new versions of existing software, or to add new features to existing software.\n\n# Types of Forks\nThere are two types of forks:\n\n## Hard Fork\nA hard fork is a complete copy of the original software, including all of its code and data. This type of fork is often used to create a new version of an existing software, or to add new features to an existing software.\n\n## Soft Fork\nA soft fork is a partial copy of the original software, containing only the code and data that the user or group of users wishes to modify. This type of fork is often used to fix bugs or to add new features to an existing software.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
                },
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "fieldConfig": {
                        "defaults": {
                            "color": {
                                "mode": "palette-classic"
                            },
                            "custom": {
                                "axisCenteredZero": false,
                                "axisColorMode": "text",
                                "axisLabel": "",
                                "axisPlacement": "auto",
                                "barAlignment": 0,
                                "drawStyle": "line",
                                "fillOpacity": 10,
                                "gradientMode": "none",
                                "hideFrom": {
                                    "legend": false,
                                    "tooltip": false,
                                    "viz": false
                                },
                                "lineInterpolation": "linear",
                                "lineWidth": 1,
                                "pointSize": 5,
                                "scaleDistribution": {
                                    "type": "linear"
                                },
                                "showPoints": "never",
                                "spanNulls": true,
                                "stacking": {
                                    "group": "A",
                                    "mode": "none"
                                },
                                "thresholdsStyle": {
                                    "mode": "off"
                                }
                            },
                            "mappings": [],
                            "thresholds": {
                                "mode": "absolute",
                                "steps": [
                                    {
                                        "color": "green"
                                    },
                                    {
                                        "color": "red",
                                        "value": 80
                                    }
                                ]
                            },
                            "unit": "ops"
                        },
                        "overrides": []
                    },
                    "gridPos": {
                        "h": 6,
                        "w": 12,
                        "x": 12,
                        "y": 27
                    },
                    "id": 61855,
                    "links": [],
                    "options": {
                        "legend": {
                            "calcs": [
                                "mean",
                                "lastNotNull",
                                "max",
                                "min"
                            ],
                            "displayMode": "table",
                            "placement": "bottom",
                            "showLegend": true
                        },
                        "tooltip": {
                            "mode": "multi",
                            "sort": "none"
                        }
                    },
                    "pluginVersion": "9.5.1",
                    "targets": [
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "groupBy": [
                                {
                                    "params": [
                                        "$interval"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "params": [
                                        "null"
                                    ],
                                    "type": "fill"
                                }
                            ],
                            "measurement": "processes",
                            "policy": "default",
                            "query": "SELECT non_negative_derivative(mean(context_switches),1s)as \"context switches\"  FROM \"kernel\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refId": "B",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "blocked"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [
                                {
                                    "key": "host",
                                    "operator": "=~",
                                    "value": "/^$server$/"
                                }
                            ],
                            "target": "alias(nonNegativeDerivative(summarize(seriesByTag('host=~${server:regex}', 'name=opvagent.kernel.context_switches'), '1min', 'sum', false)), '$server context switches')",
                            "textEditor": false
                        }
                    ],
                    "title": "Context switches",
                    "type": "timeseries",
                    "description": "# Context Switches\n\nContext switching is the process of storing and restoring the state of a process or thread so that execution can be resumed from the same point at a later time. It is an essential feature of modern operating systems, allowing multiple applications or processes to share the same hardware resources.\n\n## Process States\n\nProcesses in a Linux system can be in one of five states: running, ready, blocked, suspended, and stopped. A context switch occurs when the CPU switches from running one process to another. This is done to ensure that each process receives its fair share of CPU time.\n\n## Benefits of Context Switches\n\nContext switching allows the operating system to efficiently manage multiple processes and threads by ensuring that each process or thread receives its fair share of CPU time. This is especially important in multi-user systems, where multiple users are accessing the same hardware resources.\n\n## Disadvantages of Context Switches\n\nContext switching can be a time-consuming process, as the operating system must save the state of the current process and then restore the state of the new process. This can lead to a decrease in system performance, as the CPU is spending time saving and restoring process states instead of executing instructions.\n\n## Conclusion\n\nContext switching is an essential feature of modern operating systems, allowing multiple applications or processes to share the same hardware resources. It can, however, lead to a decrease in performance if not managed correctly.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
                }
            ],
            "targets": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "opvizorgraphite"
                    },
                    "refId": "A"
                }
            ],
            "title": "CPU & Memory",
            "type": "row",
            "description": "# CPU\n\nCPU stands for Central Processing Unit, and is the main component in a computer system that processes data and performs calculations. It is responsible for running all the operations and instructions on the computer. It is the brains of the computer, and is the most important component.\n\n# Memory\n\nMemory is a form of storage that allows data to be stored and retrieved quickly. It is used by the CPU to store and access data and instructions. Memory is usually divided into two types: Random Access Memory (RAM) and Read-Only Memory (ROM). RAM is used to store information temporarily, while ROM stores information permanently.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
        },
        {
            "collapsed": true,
            "datasource": {
                "type": "graphite",
                "uid": "opvizorgraphite"
            },
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 6
            },
            "id": 61979,
            "panels": [
                {
                    "aliasColors": {},
                    "bars": false,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "editable": true,
                    "error": false,
                    "fill": 1,
                    "fillGradient": 0,
                    "grid": {},
                    "gridPos": {
                        "h": 8,
                        "w": 24,
                        "x": 0,
                        "y": 7
                    },
                    "height": "300",
                    "hiddenSeries": false,
                    "id": 61868,
                    "interval": "1m",
                    "legend": {
                        "alignAsTable": true,
                        "avg": true,
                        "current": true,
                        "hideZero": true,
                        "max": true,
                        "min": true,
                        "rightSide": false,
                        "show": true,
                        "sort": "current",
                        "sortDesc": true,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "maxPerRow": 2,
                    "nullPointMode": "connected",
                    "options": {
                        "alertThreshold": true
                    },
                    "percentage": false,
                    "pluginVersion": "9.5.1",
                    "pointradius": 5,
                    "points": false,
                    "renderer": "flot",
                    "repeat": "cpu",
                    "seriesOverrides": [],
                    "spaceLength": 10,
                    "stack": false,
                    "steppedLine": false,
                    "targets": [
                        {
                            "alias": "$tag_host: $cpu $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "cpu_percentageBusy",
                            "policy": "default",
                            "query": "SELECT mean(usage_user) as \"user\", mean(usage_system) as \"system\", mean(usage_softirq) as \"softirq\", mean(usage_steal) as \"steal\", mean(usage_nice) as \"nice\", mean(usage_irq) as \"irq\", mean(usage_iowait) as \"iowait\", mean(usage_guest) as \"guest\", mean(usage_guest_nice) as \"guest_nice\"  FROM \"cpu\" WHERE \"host\" =~ /$server$/ and cpu = '$cpu' AND $timeFilter GROUP BY time($interval), *",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "B",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.cpu.usage_user', 'cpu=${cpu:regex}'), '$cpu user')",
                            "textEditor": false
                        },
                        {
                            "alias": "$tag_host: $cpu $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "cpu_percentageBusy",
                            "policy": "default",
                            "query": "SELECT mean(usage_user) as \"user\", mean(usage_system) as \"system\", mean(usage_softirq) as \"softirq\", mean(usage_steal) as \"steal\", mean(usage_nice) as \"nice\", mean(usage_irq) as \"irq\", mean(usage_iowait) as \"iowait\", mean(usage_guest) as \"guest\", mean(usage_guest_nice) as \"guest_nice\"  FROM \"cpu\" WHERE \"host\" =~ /$server$/ and cpu = '$cpu' AND $timeFilter GROUP BY time($interval), *",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "A",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.cpu.usage_system', 'cpu=${cpu:regex}'), '$cpu system')",
                            "textEditor": false
                        },
                        {
                            "alias": "$tag_host: $cpu $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "cpu_percentageBusy",
                            "policy": "default",
                            "query": "SELECT mean(usage_user) as \"user\", mean(usage_system) as \"system\", mean(usage_softirq) as \"softirq\", mean(usage_steal) as \"steal\", mean(usage_nice) as \"nice\", mean(usage_irq) as \"irq\", mean(usage_iowait) as \"iowait\", mean(usage_guest) as \"guest\", mean(usage_guest_nice) as \"guest_nice\"  FROM \"cpu\" WHERE \"host\" =~ /$server$/ and cpu = '$cpu' AND $timeFilter GROUP BY time($interval), *",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "C",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.cpu.usage_softirq', 'cpu=${cpu:regex}'), '$cpu softirq')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $cpu $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "cpu_percentageBusy",
                            "policy": "default",
                            "query": "SELECT mean(usage_user) as \"user\", mean(usage_system) as \"system\", mean(usage_softirq) as \"softirq\", mean(usage_steal) as \"steal\", mean(usage_nice) as \"nice\", mean(usage_irq) as \"irq\", mean(usage_iowait) as \"iowait\", mean(usage_guest) as \"guest\", mean(usage_guest_nice) as \"guest_nice\"  FROM \"cpu\" WHERE \"host\" =~ /$server$/ and cpu = '$cpu' AND $timeFilter GROUP BY time($interval), *",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "D",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.cpu.usage_iowait', 'cpu=${cpu:regex}'), '$cpu iowait')",
                            "textEditor": true
                        }
                    ],
                    "thresholds": [],
                    "timeRegions": [],
                    "title": "CPU usage for $cpu",
                    "tooltip": {
                        "msResolution": false,
                        "shared": true,
                        "sort": 0,
                        "value_type": "cumulative"
                    },
                    "type": "graph",
                    "xaxis": {
                        "mode": "time",
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "format": "percent",
                            "logBase": 1,
                            "max": 100,
                            "min": 0,
                            "show": true
                        },
                        {
                            "format": "short",
                            "logBase": 1,
                            "show": true
                        }
                    ],
                    "yaxis": {
                        "align": false
                    },
                    "description": "# CPU Usage\n\nCPU usage is a measure of how much of the processor's capacity is being used by the operating system and applications running on it. This is an important metric to monitor when troubleshooting performance issues on a Linux system.\n\n## Overview\n\nCPU usage is measured as a percentage of total processor capacity. A high percentage indicates that the processor is being heavily utilized, while a low percentage indicates that the processor is not being heavily used.\n\n## Factors Affecting CPU Usage\n\nThe amount of CPU usage can be affected by a variety of factors, including the amount of RAM available, the number of processes running, and the type of application being used.\n\n## Monitoring CPU Usage\n\nCPU usage can be monitored using the command line tool `top` or by using a graphical tool such as `htop`. Both of these tools provide an overview of the current CPU usage and can be used to identify processes that are using a large amount of CPU resources.\n\n## Conclusion\n\nCPU usage is an important metric to monitor when troubleshooting performance issues on a Linux system. By monitoring CPU usage, it is possible to identify processes that are using a large amount of CPU resources and take action to address the issue.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
                }
            ],
            "targets": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "opvizorgraphite"
                    },
                    "refId": "A"
                }
            ],
            "title": "Per-cpu usage",
            "type": "row",
            "description": ":\n\n# Per-CPU Usage\n\nPer-CPU usage refers to the amount of processing power used by each individual CPU core in a computer system. It is an important metric for monitoring the performance of a system, as it can indicate whether the system is overloaded or underutilized.\n\n## How to Measure Per-CPU Usage\n\nPer-CPU usage can be measured using the Linux 'top' command. This command provides an overview of the system's running processes, including the amount of CPU time each process is using. By summing the CPU time used by each process, the total CPU usage can be determined.\n\n## Benefits of Monitoring Per-CPU Usage\n\nMonitoring per-CPU usage can help to identify potential bottlenecks in a system. If a single core is overutilized, it can indicate that the system is being overloaded and should be upgraded or scaled. It can also help to identify processes that are using more CPU time than necessary, allowing them to be optimized or replaced.\n\n## Conclusion\n\nPer-CPU usage is an important metric for monitoring the performance of a Linux system. By measuring the amount of CPU time used by each process, it is possible to identify potential bottlenecks and optimize the system for better performance.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
        },
        {
            "collapsed": true,
            "datasource": {
                "type": "graphite",
                "uid": "opvizorgraphite"
            },
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 7
            },
            "id": 61980,
            "panels": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "fieldConfig": {
                        "defaults": {
                            "color": {
                                "mode": "palette-classic"
                            },
                            "custom": {
                                "axisCenteredZero": false,
                                "axisColorMode": "text",
                                "axisLabel": "",
                                "axisPlacement": "auto",
                                "barAlignment": 0,
                                "drawStyle": "line",
                                "fillOpacity": 10,
                                "gradientMode": "none",
                                "hideFrom": {
                                    "legend": false,
                                    "tooltip": false,
                                    "viz": false
                                },
                                "lineInterpolation": "linear",
                                "lineWidth": 1,
                                "pointSize": 5,
                                "scaleDistribution": {
                                    "type": "linear"
                                },
                                "showPoints": "never",
                                "spanNulls": true,
                                "stacking": {
                                    "group": "A",
                                    "mode": "none"
                                },
                                "thresholdsStyle": {
                                    "mode": "off"
                                }
                            },
                            "mappings": [],
                            "thresholds": {
                                "mode": "absolute",
                                "steps": [
                                    {
                                        "color": "green"
                                    },
                                    {
                                        "color": "red",
                                        "value": 80
                                    }
                                ]
                            },
                            "unit": "short"
                        },
                        "overrides": []
                    },
                    "gridPos": {
                        "h": 7,
                        "w": 24,
                        "x": 0,
                        "y": 8
                    },
                    "id": 61854,
                    "interval": "1m",
                    "links": [],
                    "options": {
                        "legend": {
                            "calcs": [
                                "mean",
                                "lastNotNull",
                                "max",
                                "min"
                            ],
                            "displayMode": "table",
                            "placement": "right",
                            "showLegend": true
                        },
                        "tooltip": {
                            "mode": "multi",
                            "sort": "none"
                        }
                    },
                    "pluginVersion": "9.5.1",
                    "targets": [
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "derivative",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "interface",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "net_bytes_recv",
                            "policy": "default",
                            "query": "SELECT mean(tcp_close) as CLOSED, mean(tcp_close_wait) as CLOSE_WAIT, mean(tcp_closing) as CLOSING, mean(tcp_established) as ESTABLISHED, mean(tcp_fin_wait1) as FIN_WAIT1, mean(tcp_fin_wait2) as FIN_WAIT2, mean(tcp_last_ack) as LAST_ACK, mean(tcp_syn_recv) as SYN_RECV, mean(tcp_syn_sent) as SYN_SENT, mean(tcp_time_wait) as TIME_WAIT FROM \"netstat\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "A",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.netstat.tcp_close'), 'CLOSED')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "derivative",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "interface",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "net_bytes_recv",
                            "policy": "default",
                            "query": "SELECT mean(tcp_close) as CLOSED, mean(tcp_close_wait) as CLOSE_WAIT, mean(tcp_closing) as CLOSING, mean(tcp_established) as ESTABLISHED, mean(tcp_fin_wait1) as FIN_WAIT1, mean(tcp_fin_wait2) as FIN_WAIT2, mean(tcp_last_ack) as LAST_ACK, mean(tcp_syn_recv) as SYN_RECV, mean(tcp_syn_sent) as SYN_SENT, mean(tcp_time_wait) as TIME_WAIT FROM \"netstat\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "B",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.netstat.tcp_close_wait'), 'CLOSED')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "derivative",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "interface",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "net_bytes_recv",
                            "policy": "default",
                            "query": "SELECT mean(tcp_close) as CLOSED, mean(tcp_close_wait) as CLOSE_WAIT, mean(tcp_closing) as CLOSING, mean(tcp_established) as ESTABLISHED, mean(tcp_fin_wait1) as FIN_WAIT1, mean(tcp_fin_wait2) as FIN_WAIT2, mean(tcp_last_ack) as LAST_ACK, mean(tcp_syn_recv) as SYN_RECV, mean(tcp_syn_sent) as SYN_SENT, mean(tcp_time_wait) as TIME_WAIT FROM \"netstat\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "C",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.netstat.tcp_closing'), 'CLOSING')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "derivative",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "interface",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "net_bytes_recv",
                            "policy": "default",
                            "query": "SELECT mean(tcp_close) as CLOSED, mean(tcp_close_wait) as CLOSE_WAIT, mean(tcp_closing) as CLOSING, mean(tcp_established) as ESTABLISHED, mean(tcp_fin_wait1) as FIN_WAIT1, mean(tcp_fin_wait2) as FIN_WAIT2, mean(tcp_last_ack) as LAST_ACK, mean(tcp_syn_recv) as SYN_RECV, mean(tcp_syn_sent) as SYN_SENT, mean(tcp_time_wait) as TIME_WAIT FROM \"netstat\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "D",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.netstat.tcp_established'), 'ESTABLISHED')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "derivative",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "interface",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "net_bytes_recv",
                            "policy": "default",
                            "query": "SELECT mean(tcp_close) as CLOSED, mean(tcp_close_wait) as CLOSE_WAIT, mean(tcp_closing) as CLOSING, mean(tcp_established) as ESTABLISHED, mean(tcp_fin_wait1) as FIN_WAIT1, mean(tcp_fin_wait2) as FIN_WAIT2, mean(tcp_last_ack) as LAST_ACK, mean(tcp_syn_recv) as SYN_RECV, mean(tcp_syn_sent) as SYN_SENT, mean(tcp_time_wait) as TIME_WAIT FROM \"netstat\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "E",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.netstat.tcp_fin_wait1'), 'ESTABLISHED')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "derivative",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "interface",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "net_bytes_recv",
                            "policy": "default",
                            "query": "SELECT mean(tcp_close) as CLOSED, mean(tcp_close_wait) as CLOSE_WAIT, mean(tcp_closing) as CLOSING, mean(tcp_established) as ESTABLISHED, mean(tcp_fin_wait1) as FIN_WAIT1, mean(tcp_fin_wait2) as FIN_WAIT2, mean(tcp_last_ack) as LAST_ACK, mean(tcp_syn_recv) as SYN_RECV, mean(tcp_syn_sent) as SYN_SENT, mean(tcp_time_wait) as TIME_WAIT FROM \"netstat\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "F",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.netstat.tcp_fin_wait2'), 'FIN_WAIT2')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "derivative",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "interface",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "net_bytes_recv",
                            "policy": "default",
                            "query": "SELECT mean(tcp_close) as CLOSED, mean(tcp_close_wait) as CLOSE_WAIT, mean(tcp_closing) as CLOSING, mean(tcp_established) as ESTABLISHED, mean(tcp_fin_wait1) as FIN_WAIT1, mean(tcp_fin_wait2) as FIN_WAIT2, mean(tcp_last_ack) as LAST_ACK, mean(tcp_syn_recv) as SYN_RECV, mean(tcp_syn_sent) as SYN_SENT, mean(tcp_time_wait) as TIME_WAIT FROM \"netstat\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "G",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.netstat.tcp_last_ack'), 'LAST_ACK')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "derivative",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "interface",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "net_bytes_recv",
                            "policy": "default",
                            "query": "SELECT mean(tcp_close) as CLOSED, mean(tcp_close_wait) as CLOSE_WAIT, mean(tcp_closing) as CLOSING, mean(tcp_established) as ESTABLISHED, mean(tcp_fin_wait1) as FIN_WAIT1, mean(tcp_fin_wait2) as FIN_WAIT2, mean(tcp_last_ack) as LAST_ACK, mean(tcp_syn_recv) as SYN_RECV, mean(tcp_syn_sent) as SYN_SENT, mean(tcp_time_wait) as TIME_WAIT FROM \"netstat\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "H",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.netstat.tcp_syn_recv'), 'SYN_RECV')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "derivative",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "interface",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "net_bytes_recv",
                            "policy": "default",
                            "query": "SELECT mean(tcp_close) as CLOSED, mean(tcp_close_wait) as CLOSE_WAIT, mean(tcp_closing) as CLOSING, mean(tcp_established) as ESTABLISHED, mean(tcp_fin_wait1) as FIN_WAIT1, mean(tcp_fin_wait2) as FIN_WAIT2, mean(tcp_last_ack) as LAST_ACK, mean(tcp_syn_recv) as SYN_RECV, mean(tcp_syn_sent) as SYN_SENT, mean(tcp_time_wait) as TIME_WAIT FROM \"netstat\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "I",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.netstat.tcp_syn_sent'), 'SYN_SENT')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "derivative",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "interface",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "net_bytes_recv",
                            "policy": "default",
                            "query": "SELECT mean(tcp_close) as CLOSED, mean(tcp_close_wait) as CLOSE_WAIT, mean(tcp_closing) as CLOSING, mean(tcp_established) as ESTABLISHED, mean(tcp_fin_wait1) as FIN_WAIT1, mean(tcp_fin_wait2) as FIN_WAIT2, mean(tcp_last_ack) as LAST_ACK, mean(tcp_syn_recv) as SYN_RECV, mean(tcp_syn_sent) as SYN_SENT, mean(tcp_time_wait) as TIME_WAIT FROM \"netstat\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "J",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.netstat.tcp_time_wait'), 'SYN_SENT')",
                            "textEditor": true
                        }
                    ],
                    "title": "TCP connections",
                    "type": "timeseries",
                    "description": "# TCP Connections\n\n## Definition\nTCP (Transmission Control Protocol) is a connection-oriented data transfer protocol used in the internet. It is used to establish a connection between two computers for the purpose of sending and receiving data.\n\n## Three-Way Handshake\nThe three-way handshake is the process used to establish a TCP connection. It involves the exchange of three messages between the two computers. The first message is sent by the initiating computer, the second message is sent by the receiving computer, and the third message is sent by the initiating computer to confirm the connection.\n\n## Establishing the Connection\nWhen the three-way handshake is complete, the connection is established. The two computers are now ready to exchange data. The initiating computer sends a message to the receiving computer, and the receiving computer responds with an acknowledgement message. This process is repeated until all the data has been exchanged.\n\n## Closing the Connection\nWhen the data exchange is complete, the initiating computer sends a message to the receiving computer to indicate that the connection should be closed. The receiving computer responds with an acknowledgement message and the connection is closed.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
                },
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "fieldConfig": {
                        "defaults": {
                            "color": {
                                "mode": "palette-classic"
                            },
                            "custom": {
                                "axisCenteredZero": false,
                                "axisColorMode": "text",
                                "axisLabel": "",
                                "axisPlacement": "auto",
                                "barAlignment": 0,
                                "drawStyle": "line",
                                "fillOpacity": 10,
                                "gradientMode": "none",
                                "hideFrom": {
                                    "legend": false,
                                    "tooltip": false,
                                    "viz": false
                                },
                                "lineInterpolation": "linear",
                                "lineWidth": 1,
                                "pointSize": 5,
                                "scaleDistribution": {
                                    "type": "linear"
                                },
                                "showPoints": "never",
                                "spanNulls": true,
                                "stacking": {
                                    "group": "A",
                                    "mode": "none"
                                },
                                "thresholdsStyle": {
                                    "mode": "off"
                                }
                            },
                            "mappings": [],
                            "thresholds": {
                                "mode": "absolute",
                                "steps": [
                                    {
                                        "color": "green"
                                    },
                                    {
                                        "color": "red",
                                        "value": 80
                                    }
                                ]
                            },
                            "unit": "short"
                        },
                        "overrides": [
                            {
                                "matcher": {
                                    "id": "byRegexp",
                                    "options": "/in/"
                                },
                                "properties": [
                                    {
                                        "id": "custom.transform",
                                        "value": "negative-Y"
                                    }
                                ]
                            }
                        ]
                    },
                    "gridPos": {
                        "h": 7,
                        "w": 12,
                        "x": 0,
                        "y": 15
                    },
                    "id": 61893,
                    "interval": "1m",
                    "links": [],
                    "options": {
                        "legend": {
                            "calcs": [
                                "mean",
                                "lastNotNull",
                                "max",
                                "min"
                            ],
                            "displayMode": "table",
                            "placement": "bottom",
                            "showLegend": true
                        },
                        "tooltip": {
                            "mode": "multi",
                            "sort": "none"
                        }
                    },
                    "pluginVersion": "9.5.1",
                    "targets": [
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "derivative",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "interface",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "net_bytes_recv",
                            "policy": "default",
                            "query": "SELECT non_negative_derivative(mean(udp_indatagrams), 1s) as \"in datagrams\" FROM \"net\" WHERE host =~ /$server/ AND $timeFilter GROUP BY time($interval), * fill(none)",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "A",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(nonNegativeDerivative(summarize(seriesByTag('host=~${server:regex}', 'name=opvagent.net.udp_indatagrams'), '1min', 'sum', false)), '$server in datagram')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "derivative",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "interface",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "net_bytes_recv",
                            "policy": "default",
                            "query": "SELECT non_negative_derivative(mean(udp_outdatagrams), 1s) as \"out datagrams\" FROM \"net\" WHERE host =~ /$server/ AND $timeFilter GROUP BY time($interval), * fill(none)",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "B",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(nonNegativeDerivative(summarize(seriesByTag('host=~${server:regex}', 'name=opvagent.net.udp_outdatagrams'), '1min', 'sum', false)), '$server out datagram')",
                            "textEditor": true
                        }
                    ],
                    "title": "UDP datagrams",
                    "type": "timeseries",
                    "description": ":\n\n# User Datagram Protocol (UDP)\nUser Datagram Protocol (UDP) is a connectionless protocol that provides a best-effort delivery system for applications. It is a simple transport layer protocol that provides an unreliable datagram service to applications. \n\n## Benefits of UDP\nUDP offers several advantages for applications that require fast, reliable communication. It is simpler and faster than its counterpart, the Transmission Control Protocol (TCP). UDP does not require the overhead of establishing and maintaining connections, making it more efficient than TCP. Additionally, UDP provides checksum capabilities to ensure data integrity. \n\n## Applications of UDP\nUDP is commonly used in applications that require real-time communication, such as streaming media applications and online gaming. It is also used for network services such as DNS and DHCP. In Linux, UDP is used for performance data, operating system usage, and process information.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
                },
                {
                    "aliasColors": {},
                    "bars": false,
                    "dashLength": 10,
                    "dashes": false,
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "editable": true,
                    "error": false,
                    "fill": 1,
                    "fillGradient": 0,
                    "grid": {},
                    "gridPos": {
                        "h": 7,
                        "w": 12,
                        "x": 12,
                        "y": 15
                    },
                    "hiddenSeries": false,
                    "id": 61896,
                    "interval": "1m",
                    "legend": {
                        "alignAsTable": true,
                        "avg": true,
                        "current": true,
                        "max": true,
                        "min": true,
                        "rightSide": false,
                        "show": true,
                        "total": false,
                        "values": true
                    },
                    "lines": true,
                    "linewidth": 1,
                    "links": [],
                    "nullPointMode": "connected",
                    "options": {
                        "alertThreshold": true
                    },
                    "percentage": false,
                    "pluginVersion": "9.5.1",
                    "pointradius": 5,
                    "points": false,
                    "renderer": "flot",
                    "seriesOverrides": [
                        {
                            "alias": "/in/",
                            "transform": "negative-Y"
                        }
                    ],
                    "spaceLength": 10,
                    "stack": false,
                    "steppedLine": false,
                    "targets": [
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "derivative",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "interface",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "net_bytes_recv",
                            "policy": "default",
                            "query": "SELECT non_negative_derivative(mean(udplite_indatagrams), 1s) as \"in datagrams\" FROM \"net\" WHERE host =~ /$server/ AND $timeFilter GROUP BY time($interval), * fill(none)",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "A",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(nonNegativeDerivative(summarize(seriesByTag('host=~${server:regex}', 'name=opvagent.net.udplite_indatagrams'), '1min', 'sum', false)), '$server in datagram')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "derivative",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "interface",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "net_bytes_recv",
                            "policy": "default",
                            "query": "SELECT non_negative_derivative(mean(udplite_outdatagrams), 1s) as \"out datagrams\" FROM \"net\" WHERE host =~ /$server/ AND $timeFilter GROUP BY time($interval), * fill(none)",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "B",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(nonNegativeDerivative(summarize(seriesByTag('host=~${server:regex}', 'name=opvagent.net.udplite_indatagrams'), '1min', 'sum', false)), '$server in datagram')",
                            "textEditor": true
                        }
                    ],
                    "thresholds": [],
                    "timeRegions": [],
                    "title": "UDPLite datagrams",
                    "tooltip": {
                        "msResolution": false,
                        "shared": true,
                        "sort": 0,
                        "value_type": "cumulative"
                    },
                    "type": "graph",
                    "xaxis": {
                        "mode": "time",
                        "show": true,
                        "values": []
                    },
                    "yaxes": [
                        {
                            "format": "short",
                            "logBase": 1,
                            "show": true
                        },
                        {
                            "format": "short",
                            "logBase": 1,
                            "show": true
                        }
                    ],
                    "yaxis": {
                        "align": false
                    },
                    "description": ":\n\n#### What is UDPLite?\nUDPLite is a lightweight version of the User Datagram Protocol (UDP) that is used to send and receive data over the Internet. It is designed to be more efficient than UDP, and is used in applications where data loss is not acceptable.\n\n#### How Does UDPLite Work?\nUDPLite works by allowing a sender to specify a checksum for each packet of data sent. The receiver then checks the checksum to ensure that the data is received intact. If the checksum fails, the packet is discarded and the sender can resend the data. This reduces the amount of data that is lost due to errors.\n\n#### Benefits of UDPLite\nUDPLite is beneficial for applications that require low latency and high reliability. It is also useful for applications that require reliable delivery of data, such as streaming audio and video. Additionally, UDPLite is more efficient than UDP, which reduces the amount of bandwidth used and improves performance.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
                }
            ],
            "targets": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "opvizorgraphite"
                    },
                    "refId": "A"
                }
            ],
            "title": "Network stack",
            "type": "row",
            "description": ".\n\n# Network Stack\nThe network stack is a set of protocols and layers used for communication between computers on a network. It allows computers to communicate with one another by sending and receiving data.\n\n## Layers\nThe network stack consists of four layers:\n\n### Physical Layer\nThe physical layer is the lowest layer in the stack. It is responsible for the physical connection between two computers, such as cables or wireless.\n\n### Data Link Layer\nThe data link layer is responsible for the transmission of data between two computers. It is responsible for the physical connection, as well as data integrity, reliability, and flow control.\n\n### Network Layer\nThe network layer is responsible for the routing of data between two computers. It is responsible for the addressing and routing of data packets.\n\n### Transport Layer\nThe transport layer is responsible for the end-to-end delivery of data. It is responsible for the reliable delivery of data and the connection between two computers.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
        },
        {
            "collapsed": true,
            "datasource": {
                "type": "graphite",
                "uid": "opvizorgraphite"
            },
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 8
            },
            "id": 61981,
            "panels": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "fieldConfig": {
                        "defaults": {
                            "color": {
                                "mode": "palette-classic"
                            },
                            "custom": {
                                "axisCenteredZero": false,
                                "axisColorMode": "text",
                                "axisLabel": "",
                                "axisPlacement": "auto",
                                "barAlignment": 0,
                                "drawStyle": "line",
                                "fillOpacity": 10,
                                "gradientMode": "none",
                                "hideFrom": {
                                    "legend": false,
                                    "tooltip": false,
                                    "viz": false
                                },
                                "lineInterpolation": "linear",
                                "lineWidth": 1,
                                "pointSize": 5,
                                "scaleDistribution": {
                                    "type": "linear"
                                },
                                "showPoints": "never",
                                "spanNulls": true,
                                "stacking": {
                                    "group": "A",
                                    "mode": "none"
                                },
                                "thresholdsStyle": {
                                    "mode": "off"
                                }
                            },
                            "mappings": [],
                            "thresholds": {
                                "mode": "absolute",
                                "steps": [
                                    {
                                        "color": "green"
                                    },
                                    {
                                        "color": "red",
                                        "value": 80
                                    }
                                ]
                            },
                            "unit": "bps"
                        },
                        "overrides": [
                            {
                                "matcher": {
                                    "id": "byRegexp",
                                    "options": "/ in$/"
                                },
                                "properties": [
                                    {
                                        "id": "custom.transform",
                                        "value": "negative-Y"
                                    }
                                ]
                            }
                        ]
                    },
                    "gridPos": {
                        "h": 8,
                        "w": 12,
                        "x": 0,
                        "y": 9
                    },
                    "id": 42026,
                    "interval": "1m",
                    "links": [],
                    "options": {
                        "legend": {
                            "calcs": [
                                "mean",
                                "lastNotNull",
                                "max",
                                "min"
                            ],
                            "displayMode": "table",
                            "placement": "bottom",
                            "showLegend": true
                        },
                        "tooltip": {
                            "mode": "multi",
                            "sort": "none"
                        }
                    },
                    "pluginVersion": "9.5.1",
                    "targets": [
                        {
                            "alias": "$tag_host: $tag_interface: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "derivative",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "interface",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "net_bytes_recv",
                            "policy": "default",
                            "query": "SELECT non_negative_derivative(mean(bytes_recv),1s)*8 as \"in\"  FROM \"net\" WHERE host =~ /$server/ AND interface =~ /$netif/ AND $timeFilter GROUP BY time($interval), * fill(none)",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "A",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(nonNegativeDerivative(summarize(seriesByTag('host=~${server:regex}', 'name=opvagent.net.bytes_recv'), '1min', 'sum')), '$server $netif in')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $tag_interface: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "derivative",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "interface",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "net_bytes_recv",
                            "policy": "default",
                            "query": "SELECT non_negative_derivative(mean(bytes_sent),1s)*8 as \"out\" FROM \"net\" WHERE host =~ /$server/ AND interface =~ /$netif/ AND $timeFilter GROUP BY time($interval), * fill(none)",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "B",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(nonNegativeDerivative(summarize(seriesByTag('host=~${server:regex}', 'name=opvagent.net.bytes_sent'), '1min', 'sum')), '$server $netif out')",
                            "textEditor": true
                        }
                    ],
                    "title": "Network Usage",
                    "type": "timeseries",
                    "description": "# Network Usage\nNetwork usage refers to the amount of data sent and received by a computer over a network. It is an important metric for measuring the performance of a computer system.\n\n## Network Traffic\nNetwork traffic is the amount of data that is sent and received over a network. It is usually measured in bytes per second (bps).\n\n## Network Bandwidth\nNetwork bandwidth is the maximum amount of data that can be transferred over a network in a given amount of time. It is usually measured in bits per second (bps).\n\n## Network Throughput\nNetwork throughput is the actual amount of data that is transferred over a network in a given amount of time. It is usually measured in megabits per second (Mbps).\n\n## Network Latency\nNetwork latency is the time it takes for a packet of data to travel from one computer to another over a network. It is usually measured in milliseconds (ms).\n\n## Network Utilization\nNetwork utilization is the amount of network resources that are being used at a given time. It is usually measured as a percentage of the total available network bandwidth.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
                },
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "fieldConfig": {
                        "defaults": {
                            "color": {
                                "mode": "palette-classic"
                            },
                            "custom": {
                                "axisCenteredZero": false,
                                "axisColorMode": "text",
                                "axisLabel": "",
                                "axisPlacement": "auto",
                                "barAlignment": 0,
                                "drawStyle": "bars",
                                "fillOpacity": 100,
                                "gradientMode": "none",
                                "hideFrom": {
                                    "legend": false,
                                    "tooltip": false,
                                    "viz": false
                                },
                                "lineInterpolation": "linear",
                                "lineWidth": 1,
                                "pointSize": 5,
                                "scaleDistribution": {
                                    "type": "linear"
                                },
                                "showPoints": "never",
                                "spanNulls": true,
                                "stacking": {
                                    "group": "A",
                                    "mode": "none"
                                },
                                "thresholdsStyle": {
                                    "mode": "off"
                                }
                            },
                            "mappings": [],
                            "thresholds": {
                                "mode": "absolute",
                                "steps": [
                                    {
                                        "color": "green"
                                    },
                                    {
                                        "color": "red",
                                        "value": 80
                                    }
                                ]
                            },
                            "unit": "pps"
                        },
                        "overrides": [
                            {
                                "matcher": {
                                    "id": "byRegexp",
                                    "options": "/ in$/"
                                },
                                "properties": [
                                    {
                                        "id": "custom.transform",
                                        "value": "negative-Y"
                                    }
                                ]
                            }
                        ]
                    },
                    "gridPos": {
                        "h": 8,
                        "w": 12,
                        "x": 12,
                        "y": 9
                    },
                    "id": 28572,
                    "interval": "1m",
                    "links": [],
                    "options": {
                        "legend": {
                            "calcs": [
                                "mean",
                                "lastNotNull",
                                "max",
                                "min"
                            ],
                            "displayMode": "table",
                            "placement": "bottom",
                            "showLegend": true
                        },
                        "tooltip": {
                            "mode": "multi",
                            "sort": "none"
                        }
                    },
                    "pluginVersion": "9.5.1",
                    "targets": [
                        {
                            "alias": "$tag_host: $tag_interface: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "derivative",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "interface",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "net_bytes_recv",
                            "policy": "default",
                            "query": "SELECT non_negative_derivative(mean(packets_recv), 1s) as \"in\" FROM \"net\" WHERE host =~ /$server/ AND interface =~ /$netif/ AND $timeFilter GROUP BY time($interval), * fill(none)",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "A",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(nonNegativeDerivative(summarize(seriesByTag('host=~${server:regex}', 'name=opvagent.net.packets_recv'), '1min', 'sum')), '$server $netif in')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $tag_interface: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "derivative",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "interface",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "net_bytes_recv",
                            "policy": "default",
                            "query": "SELECT non_negative_derivative(mean(packets_sent), 1s) as \"out\" FROM \"net\" WHERE host =~ /$server/ AND interface =~ /$netif/ AND $timeFilter GROUP BY time($interval), * fill(none)",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "B",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(nonNegativeDerivative(summarize(seriesByTag('host=~${server:regex}', 'name=opvagent.net.packets_sent'), '1min', 'sum')), '$server $netif out')",
                            "textEditor": true
                        }
                    ],
                    "title": "Network Packets",
                    "type": "timeseries",
                    "description": "# TCP Packets\n\nTCP (Transmission Control Protocol) is a connection-oriented protocol used in the Internet Protocol suite. It is responsible for providing reliable, ordered, and error-checked delivery of data between two points. It works by breaking data into small chunks called packets, which are then sent over the network and reassembled when they reach their destination.\n\n# UDP Packets\n\nUDP (User Datagram Protocol) is a connectionless protocol used in the Internet Protocol suite. Unlike TCP, it does not provide reliable delivery of data or error checking. Instead, it is used for applications that require fast, low-overhead delivery of data, such as streaming audio and video. UDP packets are sent over the network without any guarantees of delivery, and are not reassembled when they reach their destination.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
                },
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "fieldConfig": {
                        "defaults": {
                            "color": {
                                "mode": "palette-classic"
                            },
                            "custom": {
                                "axisCenteredZero": false,
                                "axisColorMode": "text",
                                "axisLabel": "Drops per second",
                                "axisPlacement": "auto",
                                "barAlignment": 0,
                                "drawStyle": "bars",
                                "fillOpacity": 100,
                                "gradientMode": "none",
                                "hideFrom": {
                                    "legend": false,
                                    "tooltip": false,
                                    "viz": false
                                },
                                "lineInterpolation": "linear",
                                "lineWidth": 1,
                                "pointSize": 5,
                                "scaleDistribution": {
                                    "type": "linear"
                                },
                                "showPoints": "never",
                                "spanNulls": true,
                                "stacking": {
                                    "group": "A",
                                    "mode": "none"
                                },
                                "thresholdsStyle": {
                                    "mode": "off"
                                }
                            },
                            "mappings": [],
                            "min": 0,
                            "thresholds": {
                                "mode": "absolute",
                                "steps": [
                                    {
                                        "color": "green"
                                    },
                                    {
                                        "color": "red",
                                        "value": 80
                                    }
                                ]
                            },
                            "unit": "pps"
                        },
                        "overrides": []
                    },
                    "gridPos": {
                        "h": 8,
                        "w": 12,
                        "x": 0,
                        "y": 17
                    },
                    "id": 58901,
                    "interval": "1m",
                    "links": [],
                    "options": {
                        "legend": {
                            "calcs": [
                                "mean",
                                "lastNotNull",
                                "max",
                                "min"
                            ],
                            "displayMode": "table",
                            "placement": "bottom",
                            "showLegend": true
                        },
                        "tooltip": {
                            "mode": "multi",
                            "sort": "none"
                        }
                    },
                    "pluginVersion": "9.5.1",
                    "targets": [
                        {
                            "alias": "$tag_host: $tag_interface: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "derivative",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "interface",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "net_bytes_recv",
                            "policy": "default",
                            "query": "SELECT non_negative_derivative(mean(drop_in), 1s) as \"in\" FROM \"net\" WHERE host =~ /$server/ AND interface =~ /$netif/ AND $timeFilter GROUP BY time($interval), host,interface fill(none)",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "A",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(nonNegativeDerivative(summarize(seriesByTag('host=~${server:regex}', 'name=opvagent.net.drop_in'), '1min', 'sum')), '$server $netif in')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $tag_interface: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "derivative",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "interface",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "net_bytes_recv",
                            "policy": "default",
                            "query": "SELECT non_negative_derivative(mean(drop_out), 1s) as \"out\" FROM \"net\" WHERE host =~ /$server/ AND interface =~ /$netif/ AND $timeFilter GROUP BY time($interval), host,interface fill(none)",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "B",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(nonNegativeDerivative(summarize(seriesByTag('host=~${server:regex}', 'name=opvagent.net.drop_out'), '1min', 'sum')), '$server $netif out')",
                            "textEditor": true
                        }
                    ],
                    "title": "Network drops",
                    "type": "timeseries",
                    "description": ":\n\n# Network Drops\nNetwork drops refer to a sudden decrease in network performance, resulting in a disruption of service. This can occur due to a variety of reasons, including hardware or software problems, as well as environmental factors.\n\n## Causes\nNetwork drops can be caused by a number of factors, including:\n\n- Hardware Issues: Malfunctioning hardware or outdated equipment can lead to network drops.\n- Software Issues: Software problems such as bugs or incompatibilities can cause network drops.\n- Environmental Factors: Interference from other devices, poor signal strength, or other environmental factors can cause network drops.\n\n## Effects\nNetwork drops can have a variety of effects, including:\n\n- Disrupted Service: Network drops can cause services such as web browsing or file sharing to be disrupted.\n- Latency Issues: Network drops can lead to increased latency, resulting in slower response times.\n- Data Loss: Network drops can cause data to be lost, resulting in data corruption or loss of access.\n\n## Solutions\nTo prevent network drops, it is important to identify and address the underlying cause. Solutions may include:\n\n- Upgrading Hardware: Upgrading outdated hardware can help prevent network drops.\n- Troubleshooting Software: Troubleshooting software issues can help prevent network drops.\n- Improving Signal Strength: Improving signal strength can help prevent network drops.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
                },
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "fieldConfig": {
                        "defaults": {
                            "color": {
                                "mode": "palette-classic"
                            },
                            "custom": {
                                "axisCenteredZero": false,
                                "axisColorMode": "text",
                                "axisLabel": "Errors per second",
                                "axisPlacement": "auto",
                                "barAlignment": 0,
                                "drawStyle": "bars",
                                "fillOpacity": 100,
                                "gradientMode": "none",
                                "hideFrom": {
                                    "legend": false,
                                    "tooltip": false,
                                    "viz": false
                                },
                                "lineInterpolation": "linear",
                                "lineWidth": 2,
                                "pointSize": 5,
                                "scaleDistribution": {
                                    "type": "linear"
                                },
                                "showPoints": "never",
                                "spanNulls": true,
                                "stacking": {
                                    "group": "A",
                                    "mode": "none"
                                },
                                "thresholdsStyle": {
                                    "mode": "off"
                                }
                            },
                            "mappings": [],
                            "min": 0,
                            "thresholds": {
                                "mode": "absolute",
                                "steps": [
                                    {
                                        "color": "green"
                                    },
                                    {
                                        "color": "red",
                                        "value": 80
                                    }
                                ]
                            },
                            "unit": "short"
                        },
                        "overrides": []
                    },
                    "gridPos": {
                        "h": 8,
                        "w": 12,
                        "x": 12,
                        "y": 17
                    },
                    "id": 50643,
                    "interval": "1m",
                    "links": [],
                    "options": {
                        "legend": {
                            "calcs": [
                                "mean",
                                "lastNotNull",
                                "max",
                                "min"
                            ],
                            "displayMode": "table",
                            "placement": "bottom",
                            "showLegend": true
                        },
                        "tooltip": {
                            "mode": "multi",
                            "sort": "none"
                        }
                    },
                    "pluginVersion": "9.5.1",
                    "targets": [
                        {
                            "alias": "$tag_host: $tag_interface: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "derivative",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "interface",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "net_bytes_recv",
                            "policy": "default",
                            "query": "SELECT non_negative_derivative(mean(err_in), 1s) as \"in\" FROM \"net\" WHERE host =~ /$server/ AND interface =~ /$netif/ AND $timeFilter GROUP BY time($interval), host,interface fill(none)",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "A",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(nonNegativeDerivative(summarize(seriesByTag('host=~${server:regex}', 'name=opvagent.net.err_in'), '1min', 'sum')), '$server $netif in')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $tag_interface: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "derivative",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "interface",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "net_bytes_recv",
                            "policy": "default",
                            "query": "SELECT non_negative_derivative(mean(err_out), 1s) as \"out\" FROM \"net\" WHERE host =~ /$server/ AND interface =~ /$netif/ AND $timeFilter GROUP BY time($interval), host,interface fill(none)",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "B",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(nonNegativeDerivative(summarize(seriesByTag('host=~${server:regex}', 'name=opvagent.net.err_in'), '1min', 'sum')), '$server $netif in')",
                            "textEditor": true
                        }
                    ],
                    "title": "Network errors",
                    "type": "timeseries",
                    "description": ":\n\n# Network Timeout Error\nNetwork timeout errors occur when a connection attempt is made to a remote server, but the request does not receive a response within the predetermined timeout period. This can be caused by a variety of issues, including server overload, network congestion, or a slow connection.\n\n# Connection Refused Error\nConnection refused errors occur when a connection attempt is made to a remote server, but the server refuses the request. This can be caused by a variety of issues, including server overload, incorrect port numbers, or a firewall blocking the connection.\n\n# DNS Lookup Error\nDNS lookup errors occur when a client attempts to access a website or other network resource, but the server does not respond with the correct IP address. This can be caused by incorrect DNS settings, a DNS server outage, or a firewall blocking the connection.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
                }
            ],
            "repeat": "netif",
            "targets": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "opvizorgraphite"
                    },
                    "refId": "A"
                }
            ],
            "title": "Network interface stats for $netif",
            "type": "row",
            "description": "# Network Interface Stats for $netif\n\n## Receive\nThe receive section of the network interface stats for $netif includes the following: \n\n- Bytes: The total number of bytes received by the network interface.\n- Packets: The total number of packets received by the network interface.\n- Errors: The total number of errors encountered while receiving data from the network interface.\n- Dropped: The total number of packets dropped while receiving data from the network interface.\n\n## Transmit\nThe transmit section of the network interface stats for $netif includes the following: \n\n- Bytes: The total number of bytes sent by the network interface.\n- Packets: The total number of packets sent by the network interface.\n- Errors: The total number of errors encountered while sending data to the network interface.\n- Dropped: The total number of packets dropped while sending data to the network interface.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
        },
        {
            "collapsed": true,
            "datasource": {
                "type": "graphite",
                "uid": "opvizorgraphite"
            },
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 9
            },
            "id": 61982,
            "panels": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "fieldConfig": {
                        "defaults": {
                            "color": {
                                "mode": "palette-classic"
                            },
                            "custom": {
                                "axisCenteredZero": false,
                                "axisColorMode": "text",
                                "axisLabel": "",
                                "axisPlacement": "auto",
                                "barAlignment": 0,
                                "drawStyle": "line",
                                "fillOpacity": 10,
                                "gradientMode": "none",
                                "hideFrom": {
                                    "legend": false,
                                    "tooltip": false,
                                    "viz": false
                                },
                                "lineInterpolation": "linear",
                                "lineWidth": 1,
                                "pointSize": 5,
                                "scaleDistribution": {
                                    "type": "linear"
                                },
                                "showPoints": "never",
                                "spanNulls": true,
                                "stacking": {
                                    "group": "A",
                                    "mode": "none"
                                },
                                "thresholdsStyle": {
                                    "mode": "off"
                                }
                            },
                            "mappings": [],
                            "thresholds": {
                                "mode": "absolute",
                                "steps": [
                                    {
                                        "color": "green"
                                    },
                                    {
                                        "color": "red",
                                        "value": 80
                                    }
                                ]
                            },
                            "unit": "bytes"
                        },
                        "overrides": [
                            {
                                "matcher": {
                                    "id": "byRegexp",
                                    "options": "/in/"
                                },
                                "properties": [
                                    {
                                        "id": "custom.transform",
                                        "value": "negative-Y"
                                    }
                                ]
                            }
                        ]
                    },
                    "gridPos": {
                        "h": 7,
                        "w": 8,
                        "x": 0,
                        "y": 10
                    },
                    "id": 26024,
                    "interval": "1m",
                    "links": [],
                    "options": {
                        "legend": {
                            "calcs": [
                                "mean",
                                "lastNotNull",
                                "max",
                                "min"
                            ],
                            "displayMode": "table",
                            "placement": "bottom",
                            "showLegend": true
                        },
                        "tooltip": {
                            "mode": "multi",
                            "sort": "none"
                        }
                    },
                    "pluginVersion": "9.5.1",
                    "targets": [
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "swap_in",
                            "policy": "default",
                            "query": "SELECT mean(\"in\") as \"in\", mean(\"out\") as \"out\" FROM \"swap\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "A",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.swap.in'), '$server in')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "swap_in",
                            "policy": "default",
                            "query": "SELECT mean(\"in\") as \"in\", mean(\"out\") as \"out\" FROM \"swap\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "B",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.swap.out'), '$server out')",
                            "textEditor": true
                        }
                    ],
                    "title": "Swap I/O bytes",
                    "type": "timeseries",
                    "description": ":\n\n# Swap I/O Bytes\nSwap I/O bytes is a metric that measures the amount of data read and written to the swap space in the Linux operating system. It is an important metric for understanding the overall system performance, as it can indicate when the system is running out of memory or when processes are using too much memory.\n\n## What is Swap I/O Bytes?\nSwap I/O bytes is the total number of bytes read and written to the swap space on the Linux operating system. It is an important metric for understanding the overall system performance, as it can indicate when the system is running out of memory or when processes are using too much memory.\n\n## How is Swap I/O Bytes Measured?\nSwap I/O bytes is measured by tracking the number of bytes read and written to the swap space. This data can be used to determine the amount of memory being used by processes, as well as the amount of memory available in the system.\n\n## What Does High Swap I/O Bytes Mean?\nHigh Swap I/O bytes indicates that the system is running out of memory or that processes are using too much memory. This can lead to slower system performance, as processes may have to wait for memory to be freed up before they can run.\n\n## What Does Low Swap I/O Bytes Mean?\nLow Swap I/O bytes indicates that the system is not using\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
                },
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "fieldConfig": {
                        "defaults": {
                            "color": {
                                "mode": "palette-classic"
                            },
                            "custom": {
                                "axisCenteredZero": false,
                                "axisColorMode": "text",
                                "axisLabel": "",
                                "axisPlacement": "auto",
                                "barAlignment": 0,
                                "drawStyle": "line",
                                "fillOpacity": 10,
                                "gradientMode": "none",
                                "hideFrom": {
                                    "legend": false,
                                    "tooltip": false,
                                    "viz": false
                                },
                                "lineInterpolation": "linear",
                                "lineWidth": 1,
                                "pointSize": 5,
                                "scaleDistribution": {
                                    "type": "linear"
                                },
                                "showPoints": "never",
                                "spanNulls": true,
                                "stacking": {
                                    "group": "A",
                                    "mode": "none"
                                },
                                "thresholdsStyle": {
                                    "mode": "off"
                                }
                            },
                            "mappings": [],
                            "max": 100,
                            "min": 0,
                            "thresholds": {
                                "mode": "absolute",
                                "steps": [
                                    {
                                        "color": "green"
                                    },
                                    {
                                        "color": "red",
                                        "value": 80
                                    }
                                ]
                            },
                            "unit": "percent"
                        },
                        "overrides": []
                    },
                    "gridPos": {
                        "h": 7,
                        "w": 8,
                        "x": 8,
                        "y": 10
                    },
                    "id": 16118,
                    "interval": "1m",
                    "links": [],
                    "options": {
                        "legend": {
                            "calcs": [
                                "mean",
                                "lastNotNull",
                                "max",
                                "min"
                            ],
                            "displayMode": "table",
                            "placement": "bottom",
                            "showLegend": true
                        },
                        "tooltip": {
                            "mode": "multi",
                            "sort": "none"
                        }
                    },
                    "pluginVersion": "9.5.1",
                    "targets": [
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "swap_in",
                            "policy": "default",
                            "query": "SELECT mean(used_percent) as used FROM \"swap\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refId": "A",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.swap.used_percent'), '$server used')",
                            "textEditor": true
                        }
                    ],
                    "title": "Swap usage (percent)",
                    "type": "timeseries",
                    "description": "# Swap Usage (Percent)\nSwap usage, also known as paging, is a measure of the amount of virtual memory being used. It is an important factor in determining the overall system performance. \n\n## What Is Swap Usage?\nSwap usage is the percentage of virtual memory being used by the operating system. It is the amount of RAM that is being used to store information that is not currently in use. When the system runs out of RAM, it will use swap space to store the data.\n\n## How Is Swap Usage Measured?\nSwap usage is measured by the percentage of RAM that is being used for swap. The amount of RAM used for swap is determined by the operating system and is usually set to a percentage of the total RAM available. \n\n## What Is a High Swap Usage?\nA high swap usage indicates that the system is using more virtual memory than is available in RAM. This can lead to slow system performance and can cause the system to crash. It is important to monitor swap usage and take action if it becomes too high.\n\n## How Can Swap Usage Be Reduced?\nSwap usage can be reduced by increasing the amount of RAM available, reducing the number of programs running, and reducing the amount of data stored in virtual memory. Additionally, it is important to keep the system updated with the latest security patches and software updates.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
                },
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "fieldConfig": {
                        "defaults": {
                            "color": {
                                "mode": "palette-classic"
                            },
                            "custom": {
                                "axisCenteredZero": false,
                                "axisColorMode": "text",
                                "axisLabel": "",
                                "axisPlacement": "auto",
                                "barAlignment": 0,
                                "drawStyle": "line",
                                "fillOpacity": 10,
                                "gradientMode": "none",
                                "hideFrom": {
                                    "legend": false,
                                    "tooltip": false,
                                    "viz": false
                                },
                                "lineInterpolation": "stepAfter",
                                "lineWidth": 1,
                                "pointSize": 5,
                                "scaleDistribution": {
                                    "type": "linear"
                                },
                                "showPoints": "never",
                                "spanNulls": true,
                                "stacking": {
                                    "group": "A",
                                    "mode": "none"
                                },
                                "thresholdsStyle": {
                                    "mode": "off"
                                }
                            },
                            "mappings": [],
                            "min": 0,
                            "thresholds": {
                                "mode": "absolute",
                                "steps": [
                                    {
                                        "color": "green"
                                    },
                                    {
                                        "color": "red",
                                        "value": 80
                                    }
                                ]
                            },
                            "unit": "bytes"
                        },
                        "overrides": [
                            {
                                "matcher": {
                                    "id": "byRegexp",
                                    "options": "/total/"
                                },
                                "properties": [
                                    {
                                        "id": "custom.fillOpacity",
                                        "value": 0
                                    }
                                ]
                            }
                        ]
                    },
                    "gridPos": {
                        "h": 7,
                        "w": 8,
                        "x": 16,
                        "y": 10
                    },
                    "id": 61850,
                    "interval": "1m",
                    "links": [],
                    "options": {
                        "legend": {
                            "calcs": [
                                "mean",
                                "lastNotNull",
                                "max",
                                "min"
                            ],
                            "displayMode": "table",
                            "placement": "bottom",
                            "showLegend": true
                        },
                        "tooltip": {
                            "mode": "multi",
                            "sort": "none"
                        }
                    },
                    "pluginVersion": "9.5.1",
                    "targets": [
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "swap_in",
                            "policy": "default",
                            "query": "SELECT mean(free) as \"free\", mean(used) as \"used\", mean(total) as \"total\" FROM \"swap\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "B",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.swap.free'), '$server used')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "swap_in",
                            "policy": "default",
                            "query": "SELECT mean(free) as \"free\", mean(used) as \"used\", mean(total) as \"total\" FROM \"swap\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "A",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.swap.used'), '$server used')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "swap_in",
                            "policy": "default",
                            "query": "SELECT mean(free) as \"free\", mean(used) as \"used\", mean(total) as \"total\" FROM \"swap\" WHERE host =~ /$server$/ AND $timeFilter GROUP BY time($interval), host ORDER BY asc",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "C",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.swap.total'), '$server utotalsed')",
                            "textEditor": true
                        }
                    ],
                    "title": "Swap usage (bytes)",
                    "type": "timeseries",
                    "description": "# Swap Usage (Bytes)\nSwap usage is the amount of virtual memory space used by the Linux operating system on a computer. This is the space used to store data that does not fit in RAM. It is also used to store data that the operating system needs to access quickly, such as when a program is running.\n\n## What is Swap Usage?\nSwap usage refers to the amount of virtual memory used by the Linux operating system. The amount of swap usage is determined by the size of the RAM and the amount of data that needs to be stored.\n\n## How is Swap Usage Measured?\nSwap usage is measured in bytes. This is the amount of data that is stored in the virtual memory space. The amount of swap usage can be monitored using the Linux system tools.\n\n## Why is Swap Usage Important?\nSwap usage is important because it helps the Linux operating system manage the amount of data that is stored in RAM. When the amount of RAM is exceeded, data is stored in the swap space. This helps to ensure that the system runs smoothly and efficiently.\n\n## How to Monitor Swap Usage?\nMonitoring swap usage is important to ensure that the system is running optimally. To monitor swap usage, use the Linux system tools such as 'free', 'top', and 'vmstat'. These tools will provide information on the amount of swap usage and can help identify any issues with the system.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
                }
            ],
            "targets": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "opvizorgraphite"
                    },
                    "refId": "A"
                }
            ],
            "title": "Swap",
            "type": "row",
            "description": "# Swap\nSwap is a feature of the Linux operating system that allows for the temporary storage of data in virtual memory. It is used to extend the amount of physical memory available to a system.\n\n## What is Swap?\nSwap is a portion of a computer's memory that is used to store data that is not actively being used. It is used to extend the amount of physical memory available to a system.\n\n## How Does Swap Work?\nWhen a system runs out of physical memory, it will begin to use the swap space as a temporary storage area. The system will move data from physical memory to the swap space, freeing up physical memory for other tasks. When the system needs the data again, it will move it back from the swap space to the physical memory.\n\n## Benefits of Swap\nSwap provides the system with additional memory resources when physical memory is running low. This allows the system to continue to function properly even when physical memory is in short supply.\n\n## Disadvantages of Swap\nThe main disadvantage of swap is that it can be slower than physical memory. This is because the data must be moved between physical memory and the swap space, which can take time. Additionally, if the system runs out of both physical memory and swap space, the system will crash.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
        },
        {
            "collapsed": true,
            "datasource": {
                "type": "graphite",
                "uid": "opvizorgraphite"
            },
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 10
            },
            "id": 61983,
            "panels": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "fieldConfig": {
                        "defaults": {
                            "color": {
                                "mode": "palette-classic"
                            },
                            "custom": {
                                "axisCenteredZero": false,
                                "axisColorMode": "text",
                                "axisLabel": "",
                                "axisPlacement": "auto",
                                "barAlignment": 0,
                                "drawStyle": "line",
                                "fillOpacity": 10,
                                "gradientMode": "none",
                                "hideFrom": {
                                    "legend": false,
                                    "tooltip": false,
                                    "viz": false
                                },
                                "lineInterpolation": "linear",
                                "lineWidth": 1,
                                "pointSize": 5,
                                "scaleDistribution": {
                                    "type": "linear"
                                },
                                "showPoints": "never",
                                "spanNulls": true,
                                "stacking": {
                                    "group": "A",
                                    "mode": "none"
                                },
                                "thresholdsStyle": {
                                    "mode": "off"
                                }
                            },
                            "mappings": [],
                            "thresholds": {
                                "mode": "absolute",
                                "steps": [
                                    {
                                        "color": "green"
                                    },
                                    {
                                        "color": "red",
                                        "value": 80
                                    }
                                ]
                            },
                            "unit": "iops"
                        },
                        "overrides": []
                    },
                    "gridPos": {
                        "h": 7,
                        "w": 8,
                        "x": 0,
                        "y": 11
                    },
                    "id": 13782,
                    "interval": "1m",
                    "links": [],
                    "options": {
                        "legend": {
                            "calcs": [
                                "mean",
                                "lastNotNull",
                                "max",
                                "min"
                            ],
                            "displayMode": "table",
                            "placement": "bottom",
                            "showLegend": true
                        },
                        "tooltip": {
                            "mode": "multi",
                            "sort": "none"
                        }
                    },
                    "pluginVersion": "9.5.1",
                    "targets": [
                        {
                            "alias": "$tag_host: $tag_name: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "path",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "io_reads",
                            "policy": "default",
                            "query": "SELECT non_negative_derivative(mean(reads),1s) as \"read\" FROM \"diskio\" WHERE \"host\" =~ /$server$/ AND \"name\" =~ /$disk$/ AND $timeFilter GROUP BY time($interval), *",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "B",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(nonNegativeDerivative(summarize(seriesByTag('host=~${server:regex}', 'name=opvagent.diskio.reads', '_name=${disk:regex}'), '1min', 'sum')), '$server $disk read')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $tag_name: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "path",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": true,
                            "measurement": "io_reads",
                            "policy": "default",
                            "query": "SELECT non_negative_derivative(mean(writes),1s) as \"write\" FROM \"diskio\" WHERE \"host\" =~ /$server$/ AND \"name\" =~ /$disk$/  AND $timeFilter GROUP BY time($interval), *",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "C",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(nonNegativeDerivative(summarize(seriesByTag('host=~${server:regex}', 'name=opvagent.diskio.writes', '_name=${disk:regex}'), '1min', 'sum')), '$server $disk write')",
                            "textEditor": true
                        }
                    ],
                    "title": "Disk I/O requests for /dev/$disk",
                    "type": "timeseries",
                    "description": ":\n\n# Disk I/O Requests\n\nDisk I/O requests are a measure of the amount of data being read from or written to a disk in the Linux operating system. This metric is important to monitor as it can indicate the performance of the system and the amount of disk activity taking place.\n\n## Read Requests\n\nRead requests refer to the number of times the system is accessing the disk to read data. This metric can be used to determine the amount of data being read from the disk and the performance of the system.\n\n## Write Requests\n\nWrite requests refer to the number of times the system is accessing the disk to write data. This metric can be used to determine the amount of data being written to the disk and the performance of the system.\n\n## Total Requests\n\nTotal requests refer to the total number of read and write requests that the system is making to the disk. This metric can be used to determine the overall performance of the system and the amount of disk activity taking place.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
                },
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "fieldConfig": {
                        "defaults": {
                            "color": {
                                "mode": "palette-classic"
                            },
                            "custom": {
                                "axisCenteredZero": false,
                                "axisColorMode": "text",
                                "axisLabel": "",
                                "axisPlacement": "auto",
                                "barAlignment": 0,
                                "drawStyle": "line",
                                "fillOpacity": 10,
                                "gradientMode": "none",
                                "hideFrom": {
                                    "legend": false,
                                    "tooltip": false,
                                    "viz": false
                                },
                                "lineInterpolation": "linear",
                                "lineWidth": 1,
                                "pointSize": 5,
                                "scaleDistribution": {
                                    "type": "linear"
                                },
                                "showPoints": "never",
                                "spanNulls": true,
                                "stacking": {
                                    "group": "A",
                                    "mode": "none"
                                },
                                "thresholdsStyle": {
                                    "mode": "off"
                                }
                            },
                            "mappings": [],
                            "thresholds": {
                                "mode": "absolute",
                                "steps": [
                                    {
                                        "color": "green"
                                    },
                                    {
                                        "color": "red",
                                        "value": 80
                                    }
                                ]
                            },
                            "unit": "bytes"
                        },
                        "overrides": []
                    },
                    "gridPos": {
                        "h": 7,
                        "w": 8,
                        "x": 8,
                        "y": 11
                    },
                    "id": 60200,
                    "interval": "1m",
                    "links": [],
                    "options": {
                        "legend": {
                            "calcs": [
                                "mean",
                                "lastNotNull",
                                "max",
                                "min"
                            ],
                            "displayMode": "table",
                            "placement": "bottom",
                            "showLegend": true
                        },
                        "tooltip": {
                            "mode": "multi",
                            "sort": "none"
                        }
                    },
                    "pluginVersion": "9.5.1",
                    "targets": [
                        {
                            "alias": "$tag_host: $tag_name: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "path",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "io_reads",
                            "policy": "default",
                            "query": "SELECT non_negative_derivative(mean(read_bytes),1s) as \"read\" FROM \"diskio\" WHERE \"host\" =~ /$server$/ AND \"name\" =~ /$disk$/  AND $timeFilter GROUP BY time($interval), *",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "B",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(nonNegativeDerivative(summarize(seriesByTag('host=~${server:regex}', 'name=opvagent.diskio.read_bytes', '_name=${disk:regex}'), '1min', 'sum')), '$server $disk read')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $tag_name: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "path",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "io_reads",
                            "policy": "default",
                            "query": "SELECT non_negative_derivative(mean(write_bytes),1s) as \"write\" FROM \"diskio\" WHERE \"host\" =~ /$server$/ AND \"name\" =~ /$disk$/ AND $timeFilter GROUP BY time($interval), *",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "C",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(nonNegativeDerivative(summarize(seriesByTag('host=~${server:regex}', 'name=opvagent.diskio.write_bytes', '_name=${disk:regex}'), '1min', 'sum')), '$server $disk write')",
                            "textEditor": true
                        }
                    ],
                    "title": "Disk I/O bytes for /dev/$disk",
                    "type": "timeseries",
                    "description": ".\n\n### Disk I/O Bytes for /dev/$disk\n\nDisk I/O bytes for /dev/$disk is a metric that measures the amount of data read from or written to the disk. This metric can be used to monitor the performance of the disk and identify any potential issues.\n\n#### Read Bytes\n\nRead bytes is the total number of bytes read from the disk. This metric can help to identify if the disk is being overutilized or if there are any issues with the disk's read performance.\n\n#### Write Bytes\n\nWrite bytes is the total number of bytes written to the disk. This metric can help to identify if the disk is being overutilized or if there are any issues with the disk's write performance.\n\n#### Total Bytes\n\nTotal bytes is the sum of the read and write bytes. This metric can help to identify if the disk is being overutilized or if there are any issues with the disk's overall performance.\n\n#### Summary\n\nDisk I/O bytes for /dev/$disk is a useful metric for monitoring the performance of the disk and identifying any potential issues. It is comprised of three metrics: read bytes, write bytes, and total bytes. By monitoring these metrics, it is possible to identify any potential issues with the disk's performance.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
                },
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "fieldConfig": {
                        "defaults": {
                            "color": {
                                "mode": "palette-classic"
                            },
                            "custom": {
                                "axisCenteredZero": false,
                                "axisColorMode": "text",
                                "axisLabel": "",
                                "axisPlacement": "auto",
                                "barAlignment": 0,
                                "drawStyle": "line",
                                "fillOpacity": 10,
                                "gradientMode": "none",
                                "hideFrom": {
                                    "legend": false,
                                    "tooltip": false,
                                    "viz": false
                                },
                                "lineInterpolation": "linear",
                                "lineWidth": 1,
                                "pointSize": 5,
                                "scaleDistribution": {
                                    "type": "linear"
                                },
                                "showPoints": "never",
                                "spanNulls": true,
                                "stacking": {
                                    "group": "A",
                                    "mode": "none"
                                },
                                "thresholdsStyle": {
                                    "mode": "off"
                                }
                            },
                            "mappings": [],
                            "thresholds": {
                                "mode": "absolute",
                                "steps": [
                                    {
                                        "color": "green"
                                    },
                                    {
                                        "color": "red",
                                        "value": 80
                                    }
                                ]
                            },
                            "unit": "ms"
                        },
                        "overrides": []
                    },
                    "gridPos": {
                        "h": 7,
                        "w": 8,
                        "x": 16,
                        "y": 11
                    },
                    "id": 56720,
                    "interval": "1m",
                    "links": [],
                    "options": {
                        "legend": {
                            "calcs": [
                                "mean",
                                "lastNotNull",
                                "max",
                                "min"
                            ],
                            "displayMode": "table",
                            "placement": "bottom",
                            "showLegend": true
                        },
                        "tooltip": {
                            "mode": "multi",
                            "sort": "none"
                        }
                    },
                    "pluginVersion": "9.5.1",
                    "targets": [
                        {
                            "alias": "$tag_host: $tag_name: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "path",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "io_reads",
                            "policy": "default",
                            "query": "SELECT non_negative_derivative(mean(read_time),1s) as \"read\" FROM \"diskio\" WHERE \"host\" =~ /$server$/ AND \"name\" =~ /$disk$/  AND $timeFilter GROUP BY time($interval), *",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "B",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(nonNegativeDerivative(summarize(seriesByTag('host=~${server:regex}', 'name=opvagent.diskio.read_time', '_name=${disk:regex}'), '1min', 'sum')), '$server $disk read')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: $tag_name: $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "path",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "io_reads",
                            "policy": "default",
                            "query": "SELECT non_negative_derivative(mean(write_time),1s) as \"write\" FROM \"diskio\" WHERE \"host\" =~ /$server$/ AND \"name\" =~ /$disk$/ AND $timeFilter GROUP BY time($interval), *",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "A",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(nonNegativeDerivative(summarize(seriesByTag('host=~${server:regex}', 'name=opvagent.diskio.write_time', '_name=${disk:regex}'), '1min', 'sum')), '$server $disk write')",
                            "textEditor": true
                        }
                    ],
                    "title": "Disk I/O time for /dev/$disk",
                    "type": "timeseries",
                    "description": ":\n\n# Disk I/O Time for /dev/$disk\n\nDisk I/O time is the amount of time it takes for the Linux operating system to read from and write to a disk. It is an important metric for understanding the performance of a system.\n\n## What is Disk I/O Time?\n\nDisk I/O time is the amount of time it takes for the Linux operating system to read from and write to a disk. It is an important metric for understanding the performance of a system, as it measures the speed at which data is transferred between the disk and the operating system.\n\n## How is Disk I/O Time Measured?\n\nDisk I/O time is measured in milliseconds, and is calculated by taking the total time it takes for the disk to complete a read or write operation and dividing it by the number of bytes transferred.\n\n## What are the Benefits of Monitoring Disk I/O Time?\n\nMonitoring disk I/O time can help identify potential performance issues with the system, such as slow disk access or insufficient memory. It can also be used to diagnose bottlenecks in the system, as well as to identify which processes are using the most disk I/O.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
                }
            ],
            "repeat": "disk",
            "repeatDirection": "h",
            "targets": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "opvizorgraphite"
                    },
                    "refId": "A"
                }
            ],
            "title": "Disk IOPS for /dev/$disk",
            "type": "row",
            "description": ".\n\n# Disk IOPS for /dev/$disk\n\nDisk IOPS (Input/Output Operations Per Second) for /dev/$disk is a measure of the number of read and write operations that can be performed per second on a disk. It is an important metric for measuring the performance of a storage device, as it indicates how quickly the device can process requests.\n\n## What is Disk IOPS?\n\nDisk IOPS is a measure of the number of read and write operations that a disk can perform in a second. It is an important metric for measuring the performance of a storage device, as it indicates how quickly the device can process requests.\n\n## How is Disk IOPS Measured?\n\nDisk IOPS is measured by running a benchmarking tool on the device. The benchmarking tool will generate a set of read and write operations and measure the time it takes to complete them. The result is then divided by the number of operations to get the IOPS.\n\n## What is a Good Disk IOPS Value?\n\nThe ideal Disk IOPS value will depend on the type of workload being performed on the device. Generally, a higher IOPS value is better, as it indicates that the device can process requests more quickly. However, it is important to note that higher IOPS values can also result in higher power consumption.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
        },
        {
            "collapsed": true,
            "datasource": {
                "type": "graphite",
                "uid": "opvizorgraphite"
            },
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 56
            },
            "id": 61984,
            "panels": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "fieldConfig": {
                        "defaults": {
                            "color": {
                                "mode": "palette-classic"
                            },
                            "custom": {
                                "axisCenteredZero": false,
                                "axisColorMode": "text",
                                "axisLabel": "",
                                "axisPlacement": "auto",
                                "barAlignment": 0,
                                "drawStyle": "line",
                                "fillOpacity": 10,
                                "gradientMode": "none",
                                "hideFrom": {
                                    "legend": false,
                                    "tooltip": false,
                                    "viz": false
                                },
                                "lineInterpolation": "stepAfter",
                                "lineWidth": 1,
                                "pointSize": 5,
                                "scaleDistribution": {
                                    "type": "linear"
                                },
                                "showPoints": "never",
                                "spanNulls": true,
                                "stacking": {
                                    "group": "A",
                                    "mode": "none"
                                },
                                "thresholdsStyle": {
                                    "mode": "off"
                                }
                            },
                            "mappings": [],
                            "min": 0,
                            "thresholds": {
                                "mode": "absolute",
                                "steps": [
                                    {
                                        "color": "green"
                                    },
                                    {
                                        "color": "red",
                                        "value": 80
                                    }
                                ]
                            },
                            "unit": "bytes"
                        },
                        "overrides": [
                            {
                                "matcher": {
                                    "id": "byRegexp",
                                    "options": "/total/"
                                },
                                "properties": [
                                    {
                                        "id": "color",
                                        "value": {
                                            "fixedColor": "#BF1B00",
                                            "mode": "fixed"
                                        }
                                    },
                                    {
                                        "id": "custom.fillOpacity",
                                        "value": 0
                                    },
                                    {
                                        "id": "custom.lineWidth",
                                        "value": 2
                                    }
                                ]
                            }
                        ]
                    },
                    "gridPos": {
                        "h": 7,
                        "w": 12,
                        "x": 0,
                        "y": 12
                    },
                    "id": 52240,
                    "interval": "1m",
                    "links": [],
                    "options": {
                        "legend": {
                            "calcs": [
                                "mean",
                                "lastNotNull",
                                "max",
                                "min"
                            ],
                            "displayMode": "table",
                            "placement": "bottom",
                            "showLegend": true
                        },
                        "tooltip": {
                            "mode": "multi",
                            "sort": "none"
                        }
                    },
                    "pluginVersion": "9.5.1",
                    "targets": [
                        {
                            "alias": "$tag_host: mountpoint $tag_path - $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "path",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "disk_total",
                            "policy": "default",
                            "query": "SELECT mean(total) AS \"total\", mean(used) as \"used\" FROM \"disk\" WHERE \"host\" =~ /$server$/ AND \"path\" =~ /^$mountpoint$/AND $timeFilter GROUP BY time($interval), \"host\", \"path\"",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "B",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.disk.total'), '$server $mountpoint total')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: mountpoint $tag_path - $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "path",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "disk_total",
                            "policy": "default",
                            "query": "SELECT mean(total) AS \"total\", mean(used) as \"used\" FROM \"disk\" WHERE \"host\" =~ /$server$/ AND \"path\" =~ /^$mountpoint$/AND $timeFilter GROUP BY time($interval), \"host\", \"path\"",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "A",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.disk.used'), '$server $mountpoint used')",
                            "textEditor": true
                        }
                    ],
                    "title": "Disk usage for $mountpoint",
                    "type": "timeseries",
                    "description": "## Disk Usage for $mountpoint\n\nDisk usage for the $mountpoint is an important metric to monitor in order to ensure the performance of the Linux operating system. The disk usage of the $mountpoint can be monitored by using various tools such as df, du and iostat. \n\n### df\n\nThe df command is used to show the usage of the file systems mounted on the system. It displays the total size, used size, available size, and percentage of disk usage for each mounted file system.\n\n### du\n\nThe du command is used to show the disk usage of a directory or file. It displays the size of the directory or file and the percentage of disk usage.\n\n### iostat\n\nThe iostat command is used to show the disk usage of each device. It displays the total size, used size, available size, and percentage of disk usage for each device.\n\nBy monitoring the disk usage of the $mountpoint, administrators can identify any issues with the system and take appropriate action to resolve them. This will ensure that the Linux operating system runs optimally and provides the best performance.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
                },
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "${DS_GRAPHITE}"
                    },
                    "fieldConfig": {
                        "defaults": {
                            "color": {
                                "mode": "palette-classic"
                            },
                            "custom": {
                                "axisCenteredZero": false,
                                "axisColorMode": "text",
                                "axisLabel": "",
                                "axisPlacement": "auto",
                                "barAlignment": 0,
                                "drawStyle": "bars",
                                "fillOpacity": 100,
                                "gradientMode": "none",
                                "hideFrom": {
                                    "legend": false,
                                    "tooltip": false,
                                    "viz": false
                                },
                                "lineInterpolation": "stepAfter",
                                "lineWidth": 1,
                                "pointSize": 5,
                                "scaleDistribution": {
                                    "log": 10,
                                    "type": "log"
                                },
                                "showPoints": "never",
                                "spanNulls": true,
                                "stacking": {
                                    "group": "A",
                                    "mode": "none"
                                },
                                "thresholdsStyle": {
                                    "mode": "off"
                                }
                            },
                            "mappings": [],
                            "min": 0,
                            "thresholds": {
                                "mode": "absolute",
                                "steps": [
                                    {
                                        "color": "green"
                                    },
                                    {
                                        "color": "red",
                                        "value": 80
                                    }
                                ]
                            },
                            "unit": "short"
                        },
                        "overrides": [
                            {
                                "matcher": {
                                    "id": "byRegexp",
                                    "options": "/used/"
                                },
                                "properties": [
                                    {
                                        "id": "color",
                                        "value": {
                                            "fixedColor": "#BF1B00",
                                            "mode": "fixed"
                                        }
                                    },
                                    {
                                        "id": "custom.drawStyle",
                                        "value": "line"
                                    }
                                ]
                            },
                            {
                                "matcher": {
                                    "id": "byRegexp",
                                    "options": "/free/"
                                },
                                "properties": [
                                    {
                                        "id": "custom.drawStyle",
                                        "value": "line"
                                    },
                                    {
                                        "id": "custom.fillOpacity",
                                        "value": 0
                                    },
                                    {
                                        "id": "custom.lineWidth",
                                        "value": 0
                                    },
                                    {
                                        "id": "custom.lineWidth",
                                        "value": 1
                                    }
                                ]
                            }
                        ]
                    },
                    "gridPos": {
                        "h": 7,
                        "w": 12,
                        "x": 12,
                        "y": 12
                    },
                    "id": 33458,
                    "interval": "1m",
                    "links": [],
                    "options": {
                        "legend": {
                            "calcs": [
                                "mean",
                                "lastNotNull",
                                "max",
                                "min"
                            ],
                            "displayMode": "table",
                            "placement": "bottom",
                            "showLegend": true
                        },
                        "tooltip": {
                            "mode": "multi",
                            "sort": "none"
                        }
                    },
                    "pluginVersion": "9.5.1",
                    "targets": [
                        {
                            "alias": "$tag_host: mountpoint $tag_path - $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "path",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "measurement": "disk_inodes_free",
                            "policy": "default",
                            "query": "SELECT mean(inodes_free) as \"free\", mean(inodes_used) as \"used\" FROM \"disk\" WHERE \"host\" =~ /$server$/  AND \"path\" =~ /^$mountpoint$/ AND $timeFilter GROUP BY time($interval), \"host\", \"path\"",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "B",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(seriesByTag('host=~${server:regex}', 'name=opvagent.disk.inodes_free'), '$server $mountpoint free')",
                            "textEditor": true
                        },
                        {
                            "alias": "$tag_host: mountpoint $tag_path - $col",
                            "datasource": {
                                "type": "graphite",
                                "uid": "${DS_GRAPHITE}"
                            },
                            "dsType": "graphite",
                            "function": "mean",
                            "groupBy": [
                                {
                                    "interval": "auto",
                                    "params": [
                                        "auto"
                                    ],
                                    "type": "time"
                                },
                                {
                                    "key": "host",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                },
                                {
                                    "key": "path",
                                    "params": [
                                        "tag"
                                    ],
                                    "type": "tag"
                                }
                            ],
                            "hide": false,
                            "measurement": "disk_inodes_free",
                            "policy": "default",
                            "query": "SELECT mean(inodes_free) as \"free\", mean(inodes_used) as \"used\" FROM \"disk\" WHERE \"host\" =~ /$server$/  AND \"path\" =~ /^$mountpoint$/ AND $timeFilter GROUP BY time($interval), \"host\", \"path\"",
                            "rawQuery": true,
                            "refCount": 0,
                            "refId": "A",
                            "resultFormat": "time_series",
                            "select": [
                                [
                                    {
                                        "params": [
                                            "value"
                                        ],
                                        "type": "field"
                                    },
                                    {
                                        "params": [],
                                        "type": "mean"
                                    }
                                ]
                            ],
                            "tags": [],
                            "target": "alias(summarize(seriesByTag('host=~${server:regex}', 'name=opvagent.disk.inodes_used'), '1min', 'sum', false), '$server $mountpoint used')",
                            "textEditor": false
                        }
                    ],
                    "title": "Disk inodes for $mountpoint",
                    "type": "timeseries",
                    "description": ".\n\n## Disk Inodes for $mountpoint\n\nDisk inodes are used to track the storage and retrieval of files on a Linux system. Inodes are stored on the disk and act as an index for the system to locate files. Each inode contains metadata about the file, including the file\u2019s owner, permissions, size, and the date it was created or modified.\n\nInodes are also used to track the number of files on a disk. When a disk is full, the system will not be able to store any more files until some of the existing files are deleted, or more space is added to the disk.\n\nInodes are important for maintaining a healthy Linux system. If too many inodes are used on a disk, it can cause performance issues. It is important to monitor the number of inodes used on a system, and to ensure that the number does not exceed the maximum allowed.\n\nTo check the number of inodes used on a disk, the user can use the `df -i` command. This command will display the number of inodes used on a given mountpoint, as well as the total number of inodes available on the disk. This information can be used to determine if the disk is running out of inodes, or if the system is running out of space.\n\nMonitoring disk inodes is an important part of maintaining a healthy Linux system. By ensuring that the number of inodes used\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
                }
            ],
            "repeat": "mountpoint",
            "targets": [
                {
                    "datasource": {
                        "type": "graphite",
                        "uid": "opvizorgraphite"
                    },
                    "refId": "A"
                }
            ],
            "title": "Disk space usage for $mountpoint",
            "type": "row",
            "description": "# Disk Space Usage for $mountpoint\nDisk space usage is an important metric to monitor when managing a Linux operating system. The $mountpoint command is used to check the amount of disk space being used on a particular mount point.\n\n## Overview\nThe $mountpoint command provides a summary of disk space usage for a given mount point. It displays the total size of the mount point, the amount of disk space used, the amount of disk space available, and the percentage of disk space used.\n\n## Details\nThe $mountpoint command also provides more detailed information about disk space usage. It shows the amount of disk space used by each directory and file in the mount point, as well as the type of file system.\n\n## Monitoring\nIt is important to monitor disk space usage to ensure that the mount point does not become full and that the system is running efficiently. The $mountpoint command can be used to check disk space usage on a regular basis and take action if necessary.\n\n## Conclusion\nThe $mountpoint command is a useful tool for monitoring disk space usage on a Linux operating system. It provides an overview of disk space usage and more detailed information about the mount point. Monitoring disk space usage is important to ensure the system is running efficiently.\n\nAbout: Linux Performance Data, Linux operating system usage and processes"
        }
    ],
    "refresh": "",
    "revision": 1,
    "schemaVersion": 38,
    "style": "dark",
    "tags": [
        "linux",
        "telegraf",
        "performance"
    ],
    "templating": {
        "list": [
            {
                "current": {},
                "datasource": {
                    "type": "graphite",
                    "uid": "${DS_GRAPHITE}"
                },
                "definition": "",
                "hide": 0,
                "includeAll": false,
                "label": "Server",
                "multi": false,
                "name": "server",
                "options": [],
                "query": {
                    "queryType": "Default",
                    "refId": "A",
                    "target": "tag_values(host,name=opvagent.system.uptime)"
                },
                "refresh": 2,
                "regex": "",
                "skipUrlSync": false,
                "sort": 1,
                "type": "query",
                "useTags": false
            },
            {
                "current": {},
                "datasource": {
                    "type": "graphite",
                    "uid": "${DS_GRAPHITE}"
                },
                "definition": "",
                "hide": 0,
                "includeAll": false,
                "label": "Mountpoint",
                "multi": false,
                "name": "mountpoint",
                "options": [],
                "query": {
                    "queryType": "Default",
                    "refId": "A",
                    "target": "tag_values(path,host=~${server:regex})"
                },
                "refresh": 1,
                "regex": "",
                "skipUrlSync": false,
                "sort": 0,
                "type": "query",
                "useTags": false
            },
            {
                "current": {},
                "datasource": {
                    "type": "graphite",
                    "uid": "${DS_GRAPHITE}"
                },
                "definition": "",
                "hide": 0,
                "includeAll": true,
                "label": "CPU",
                "multi": true,
                "name": "cpu",
                "options": [],
                "query": {
                    "queryType": "Default",
                    "refId": "A",
                    "target": "tag_values(cpu,host=~${server:regex})"
                },
                "refresh": 1,
                "regex": "",
                "skipUrlSync": false,
                "sort": 1,
                "type": "query",
                "useTags": false
            },
            {
                "current": {},
                "datasource": {
                    "type": "graphite",
                    "uid": "${DS_GRAPHITE}"
                },
                "definition": "",
                "hide": 0,
                "includeAll": true,
                "label": "Disk",
                "multi": true,
                "name": "disk",
                "options": [],
                "query": {
                    "queryType": "Default",
                    "refId": "A",
                    "target": "tag_values(device,host=~${server:regex})"
                },
                "refresh": 1,
                "regex": "",
                "skipUrlSync": false,
                "sort": 0,
                "type": "query",
                "useTags": false
            },
            {
                "current": {},
                "datasource": {
                    "type": "graphite",
                    "uid": "${DS_GRAPHITE}"
                },
                "definition": "",
                "hide": 0,
                "includeAll": true,
                "label": "Network interface",
                "multi": true,
                "name": "netif",
                "options": [],
                "query": {
                    "queryType": "Default",
                    "refId": "A",
                    "target": "tag_values(interface,host=~${server:regex},name=opvagent.net.bytes_recv)"
                },
                "refresh": 1,
                "regex": "",
                "skipUrlSync": false,
                "sort": 1,
                "type": "query",
                "useTags": false
            }
        ]
    },
    "time": {
        "from": "now-1h",
        "to": "now"
    },
    "timepicker": {
        "refresh_intervals": [
            "5s",
            "10s",
            "30s",
            "1m",
            "5m",
            "15m",
            "30m",
            "1h",
            "2h",
            "1d"
        ],
        "time_options": [
            "5m",
            "15m",
            "1h",
            "6h",
            "12h",
            "24h",
            "2d",
            "7d",
            "30d"
        ]
    },
    "timezone": "browser",
    "title": "Linux: Host Overview",
    "uid": "4-5-zW7sWHzZz",
    "version": 1,
    "weekStart": ""
}